{"version":3,"sources":["components/Common/Atoms.js","components/Common/ApiError.js","components/Common/ScanQRCode.js","components/Common/EnhancedInputs.js","components/Common/BalanceHeader.js","components/Common/BalanceHeaderFiat.js","components/Wallet/Tx.js","components/Wallet/TokenListItem.js","components/Wallet/TokenList.js","components/OnBoarding/OnBoarding.js","components/Common/QRCode.js","components/Wallet/TxHistory.js","components/Wallet/Wallet.js"],"names":["LoadingCtn","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","primary","BalanceHeaderWrap","_templateObject2","wallet","text","BalanceHeaderFiatWrap","_templateObject3","secondary","ZeroBalanceHeader","_templateObject4","TokenParamLabel","span","_templateObject5","AlertMsg","p","_templateObject6","forms","error","ConvertAmount","_templateObject7","ApiError","React","CashLoader","StyledScanQRCode","StyledModal","Modal","QRPreview","video","ScanQRCode","_ref","loadWithCameraOpen","_ref$onScan","onScan","otherProps","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","setError","_useState5","_useState6","activeCodeReader","setActiveCodeReader","teardownCodeReader","codeReader","reset","stop","parseContent","content","type","values","isValidCashPrefix","isValidTokenPrefix","address","eventLabel","currency","ticker","split","tokenPrefix","length","tokenTicker","Event","scanForQrCode","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","BrowserQRCodeReader","getVideoInputDevices","sent","decodeFromInputVideoDevice","undefined","abrupt","t0","console","log","JSON","stringify","message","apply","arguments","useEffect","createElement","Fragment","Object","assign","onClick","ThemedQrcodeOutlined","title","onCancel","footer","Alert","description","showIcon","style","textAlign","id","TextArea","Input","AntdFormCss","css","addonBackground","border","addonForeground","selectionBackground","borders","color","AntdFormWrapper","InputAddonText","disabled","InputNumberAddonText","SendBchInput","onMax","inputProps","selectProps","activeFiatCode","Option","Select","currencyOptions","value","label","map","key","className","CurrencySelect","defaultValue","width","Form","Item","Group","compact","step","dollar","Math","pow","cashDecimals","prefix","ThemedDollarOutlined","src","logo","alt","height","lineHeight","FormItemWithMaxAddon","_ref3","_excluded3","addonAfter","DestinationAddressSingle","_ref4","_excluded4","ThemedWalletOutlined","autoComplete","DestinationAddressMulti","_ref5","_excluded5","Bip70AddressSingle","_ref6","_excluded6","readOnly","SelfMintAuthCode","_ref7","_excluded7","ThemedLockOutlined","SelfMintPurchaseAmount","_ref8","_excluded8","logoUrl","authPubKeys","imageUrl","precision","CurrencySelectDropdown","currencyMenuOptions","currencyKeys","keys","fiatCurrencies","i","currencyMenuOption","slug","concat","name","symbol","push","BalanceHeader","balance","BalanceHeaderFiat","settings","fiatPrice","fiatCurrency","parseFloat","toFixed","toLocaleString","toUpperCase","SentTx","ArrowUpOutlined","ReceivedTx","ArrowDownOutlined","GenesisTx","ExperimentOutlined","UnparsedTx","ExclamationOutlined","DateType","OpReturnType","SentLabel","MintedLabel","_templateObject8","ReceivedLabel","_templateObject9","CashtabMessageLabel","_templateObject10","MessageLabel","_templateObject11","ReplyMessageLabel","_templateObject12","TxIcon","_templateObject13","TxInfo","_templateObject14","outgoing","TxFiatPrice","_templateObject15","TokenInfo","_templateObject16","TxTokenIcon","_templateObject17","TokenTxAmt","_templateObject18","TokenName","_templateObject19","TxWrapper","_templateObject20","tokenListItem","background","boxShadow","Tx","data","_ref$isExternalMint","isExternalMint","txDate","blocktime","Date","toLocaleDateString","unparsedTx","includes","srcUrls","tokenTx","tokenIconsUrl","tokenInfo","tokenId","authPubKey","find","authObj","outgoingTx","transactionType","block","Img","unloader","borderRadius","makeBlockie","qtyReceived","toString","tokenName","qtySent","amountSent","isNaN","formatBalance","amountReceived","opReturnMessage","isCashtabMessage","Buffer","from","replyAddress","Link","to","pathname","state","TokenIcon","BalanceAndTicker","Wrapper","TokenListItem","TokenList","tokens","token","info","decimals","WelcomeText","WelcomeLink","a","OnBoarding","ContextValue","useContext","WalletContext","createWallet","validateMnemonic","dirty","mnemonic","formData","setFormData","seedInput","openSeedInput","isValidMnemonic","setIsValidMnemonic","confirm","_submit","_objectSpread","URL","window","location","searchParams","get","href","target","rel","PrimaryButton","icon","ExclamationCircleOutlined","okText","onOk","PlusSquareOutlined","SecondaryButton","ImportOutlined","validateStatus","help","LockOutlined","placeholder","onChange","e","_e$target","_defineProperty","handleChange","required","SmartButton","submit","StyledRawQRCode","RawQRCode","qr","shadow","_ref$xec","xec","Copied","_ref2$xec","_excluded2","_ref3$xec","copyBorderCash","copyBorderToken","contrast","PrefixLabel","AddressHighlightTrim","CustomInput","_ref4$xec","brandSecondary","QRCode","_ref5$size","size","_ref5$onClick","convertToEcashPrefix","address_trim","prefixLength","isCash","txtRef","useRef","CopyToClipboard","display","position","onCopy","setTimeout","current","select","evt","fontSize","renderAs","includeMargin","imageSettings","tokenLogo","x","y","excavate","ref","spellCheck","slice","TxLink","TxHistory","txs","tx","txid","Tabs","TabLabel","button","active","TabLine","left","TabPane","SwitchBtnCtn","switch","inactive","activeToken","SwitchBtn","activeCash","Links","ExternalLink","AddrSwitchContainer","WalletInfo","apiError","cashtabSettings","walletState","getWalletState","balances","parsedTxHistory","_React$useState","_React$useState2","setAddress","_React$useState3","_React$useState4","activeTab","setActiveTab","hasHistory","handleChangeAddress","prefixesArray","_toConsumableArray","prefixes","tokenPrefixes","useHistory","hash","search","fullQueryString","delimiterIndex","indexOf","txInfoArr","param","toLowerCase","encodedValue","decodeURIComponent","queryString","getUrlFromQueryString","totalBalance","role","Path245","Path145","Path1899","slpAddress","cashAddress","jestBCH","Wallet","previousWallet","loading","path1899"],"mappings":"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","file":"static/js/9.4e102eb1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LoadingCtn = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 400px;\r\n    flex-direction: column;\r\n\r\n    svg {\r\n        width: 50px;\r\n        height: 50px;\r\n        fill: ${props => props.theme.primary};\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 23px;\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderFiatWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const ZeroBalanceHeader = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const TokenParamLabel = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const AlertMsg = styled.p`\r\n    color: ${props => props.theme.forms.error} !important;\r\n`;\r\n\r\nexport const ConvertAmount = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport { CashLoader } from '@components/Common/CustomIcons';\r\nimport { AlertMsg } from '@components/Common/Atoms';\r\n\r\nconst ApiError = () => {\r\n    return (\r\n        <>\r\n            <AlertMsg>\r\n                <b>API connection lost.</b>\r\n                <br /> Re-establishing connection...\r\n            </AlertMsg>\r\n            <CashLoader />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApiError;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Modal } from 'antd';\r\nimport { ThemedQrcodeOutlined } from '@components/Common/CustomIcons';\r\nimport styled from 'styled-components';\r\nimport { BrowserQRCodeReader } from '@zxing/library';\r\nimport {\r\n    currency,\r\n    isValidCashPrefix,\r\n    isValidTokenPrefix,\r\n} from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\n\r\nconst StyledScanQRCode = styled.span`\r\n    display: block;\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n    width: 400px !important;\r\n    height: 400px !important;\r\n\r\n    .ant-modal-close {\r\n        top: 0 !important;\r\n        right: 0 !important;\r\n    }\r\n`;\r\n\r\nconst QRPreview = styled.video`\r\n    width: 100%;\r\n`;\r\n\r\nconst ScanQRCode = ({\r\n    loadWithCameraOpen,\r\n    onScan = () => null,\r\n    ...otherProps\r\n}) => {\r\n    const [visible, setVisible] = useState(loadWithCameraOpen);\r\n    const [error, setError] = useState(false);\r\n    // Use these states to debug video errors on mobile\r\n    // Note: iOS chrome/brave/firefox does not support accessing camera, will throw error\r\n    // iOS users can use safari\r\n    // todo only show scanner with safari\r\n    //const [mobileError, setMobileError] = useState(false);\r\n    //const [mobileErrorMsg, setMobileErrorMsg] = useState(false);\r\n    const [activeCodeReader, setActiveCodeReader] = useState(null);\r\n\r\n    const teardownCodeReader = codeReader => {\r\n        if (codeReader !== null) {\r\n            codeReader.reset();\r\n            codeReader.stop();\r\n            codeReader = null;\r\n            setActiveCodeReader(codeReader);\r\n        }\r\n    };\r\n\r\n    const parseContent = content => {\r\n        let type = 'unknown';\r\n        let values = {};\r\n\r\n        // If what scanner reads from QR code begins with 'bitcoincash:' or 'simpleledger:' or their successor prefixes\r\n        if (isValidCashPrefix(content) || isValidTokenPrefix(content)) {\r\n            type = 'address';\r\n            values = { address: content };\r\n            // Event(\"Category\", \"Action\", \"Label\")\r\n            // Track number of successful QR code scans\r\n            // BCH or slp?\r\n            let eventLabel = currency.ticker;\r\n            const isToken = content.split(currency.tokenPrefix).length > 1;\r\n            if (isToken) {\r\n                eventLabel = currency.tokenTicker;\r\n            }\r\n            Event('ScanQRCode.js', 'Address Scanned', eventLabel);\r\n        }\r\n        return { type, values };\r\n    };\r\n\r\n    const scanForQrCode = async () => {\r\n        const codeReader = new BrowserQRCodeReader();\r\n        setActiveCodeReader(codeReader);\r\n\r\n        try {\r\n            // Need to execute this before you can decode input\r\n            // eslint-disable-next-line no-unused-vars\r\n            const videoInputDevices = await codeReader.getVideoInputDevices();\r\n            //console.log(`videoInputDevices`, videoInputDevices);\r\n            //setMobileError(JSON.stringify(videoInputDevices));\r\n\r\n            // choose your media device (webcam, frontal camera, back camera, etc.)\r\n            // TODO implement if necessary\r\n            //const selectedDeviceId = videoInputDevices[0].deviceId;\r\n\r\n            //const previewElem = document.querySelector(\"#test-area-qr-code-webcam\");\r\n\r\n            const content = await codeReader.decodeFromInputVideoDevice(\r\n                undefined,\r\n                'test-area-qr-code-webcam',\r\n            );\r\n            const result = parseContent(content.text);\r\n\r\n            // stop scanning and fill form if it's an address\r\n            if (result.type === 'address') {\r\n                // Hide the scanner\r\n                setVisible(false);\r\n                onScan(result.values.address);\r\n                return teardownCodeReader(codeReader);\r\n            }\r\n        } catch (err) {\r\n            console.log(`Error in QR scanner:`);\r\n            console.log(err);\r\n            console.log(JSON.stringify(err.message));\r\n            //setMobileErrorMsg(JSON.stringify(err.message));\r\n            setError(err);\r\n            teardownCodeReader(codeReader);\r\n        }\r\n\r\n        // stop scanning after 20s no matter what\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!visible) {\r\n            setError(false);\r\n            // Stop the camera if user closes modal\r\n            if (activeCodeReader !== null) {\r\n                teardownCodeReader(activeCodeReader);\r\n            }\r\n        } else {\r\n            scanForQrCode();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [visible]);\r\n\r\n    return (\r\n        <>\r\n            <StyledScanQRCode\r\n                {...otherProps}\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <ThemedQrcodeOutlined />\r\n            </StyledScanQRCode>\r\n            <StyledModal\r\n                title=\"Scan QR code\"\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                footer={null}\r\n            >\r\n                {visible ? (\r\n                    <div>\r\n                        {error ? (\r\n                            <>\r\n                                <Alert\r\n                                    message=\"Error\"\r\n                                    description=\"Error in QR scanner. Please ensure your camera is not in use. Due to Apple restrictions on third-party browsers, you must use Safari browser for QR code scanning on an iPhone.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                    style={{ textAlign: 'left' }}\r\n                                />\r\n                                {/*\r\n                <p>{mobileError}</p>\r\n                <p>{mobileErrorMsg}</p>\r\n                */}\r\n                            </>\r\n                        ) : (\r\n                            <QRPreview id=\"test-area-qr-code-webcam\"></QRPreview>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n            </StyledModal>\r\n        </>\r\n    );\r\n};\r\n\r\nScanQRCode.propTypes = {\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    onScan: PropTypes.func,\r\n};\r\n\r\nexport default ScanQRCode;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select } from 'antd';\r\nconst { TextArea } = Input;\r\nimport {\r\n    ThemedDollarOutlined,\r\n    ThemedWalletOutlined,\r\n    ThemedLockOutlined\r\n} from '@components/Common/CustomIcons';\r\nimport styled, { css } from 'styled-components';\r\nimport ScanQRCode from './ScanQRCode';\r\nimport useBCH from '@hooks/useBCH';\r\nimport { currency } from '@components/Common/Ticker.js';\r\nimport { authPubKeys } from '@utils/selfMint';\r\n\r\nexport const AntdFormCss = css`\r\n    .ant-input-group-addon {\r\n        background-color: ${props =>\r\n            props.theme.forms.addonBackground} !important;\r\n        border: 1px solid ${props => props.theme.forms.border};\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    input.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n    }\r\n    textarea.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n        min-height: 100px;\r\n    }\r\n    .ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-select-selector {\r\n        height: 60px !important;\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-form-item-has-error\r\n        > div\r\n        > div.ant-form-item-control-input\r\n        > div\r\n        > span\r\n        > span\r\n        > span.ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error .ant-input,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper,\r\n    .ant-form-item-has-error .ant-input:hover,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper:hover {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error\r\n        .ant-select:not(.ant-select-disabled):not(.ant-select-customize-input)\r\n        .ant-select-selector {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-select-single .ant-select-selector .ant-select-selection-item,\r\n    .ant-select-single .ant-select-selector .ant-select-selection-placeholder {\r\n        line-height: 60px;\r\n        text-align: left;\r\n        color: ${props => props.theme.forms.text};\r\n        font-weight: bold;\r\n    }\r\n    .ant-form-item-has-error .ant-input-group-addon {\r\n        color: ${props => props.theme.forms.error} !important;\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-form-item-explain.ant-form-item-explain-error {\r\n        color: ${props => props.theme.forms.error} !important;\r\n    }\r\n`;\r\n\r\nexport const AntdFormWrapper = styled.div`\r\n    ${AntdFormCss}\r\n`;\r\n\r\nexport const InputAddonText = styled.span`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const InputNumberAddonText = styled.span`\r\n    background-color: ${props => props.theme.forms.addonBackground} !important;\r\n    border: 1px solid ${props => props.theme.forms.border};\r\n    color: ${props => props.theme.forms.addonForeground} !important;\r\n    height: 50px;\r\n    line-height: 47px;\r\n\r\n    * {\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const SendBchInput = ({\r\n    onMax,\r\n    inputProps,\r\n    selectProps,\r\n    activeFiatCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: currency.ticker,\r\n            label: currency.ticker,\r\n        },\r\n        {\r\n            value: activeFiatCode ? activeFiatCode : 'USD',\r\n            label: activeFiatCode ? activeFiatCode : 'USD',\r\n        },\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            defaultValue={currency.ticker}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : (\r\n                                <img\r\n                                    src={currency.logo}\r\n                                    alt=\"\"\r\n                                    width={16}\r\n                                    height={16}\r\n                                />\r\n                            )\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                    <InputNumberAddonText\r\n                        style={{\r\n                            width: '10%',\r\n                            height: '60px',\r\n                            lineHeight: '60px',\r\n                        }}\r\n                        disabled={!!(inputProps || {}).disabled}\r\n                        onClick={!(inputProps || {}).disabled && onMax}\r\n                    >\r\n                        max\r\n                    </InputNumberAddonText>\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBchInput.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeFiatCode: PropTypes.string,\r\n};\r\n\r\nexport const SendBip70Input = ({\r\n    inputProps,\r\n    selectProps,\r\n    activeTokenCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: activeTokenCode,\r\n            label: activeTokenCode,\r\n        }\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            value={activeTokenCode}\r\n            readOnly={true}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n\r\n    const prefixImage = inputProps.token ? (\r\n        <div\r\n            style={{\r\n                height: '16px',\r\n                width: '16px'\r\n            }}\r\n        ></div>\r\n    ) : (\r\n        <img\r\n            src={currency.logo}\r\n            alt=\"\"\r\n            width={16}\r\n            height={16}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        readOnly={true}\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : prefixImage\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBip70Input.propTypes = {\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeTokenCode: PropTypes.string,\r\n};\r\n\r\nexport const FormItemWithMaxAddon = ({ onMax, inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    type=\"number\"\r\n                    prefix={\r\n                        <img\r\n                            src={currency.logo}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    addonAfter={\r\n                        <InputAddonText\r\n                            disabled={!!(inputProps || {}).disabled}\r\n                            onClick={!(inputProps || {}).disabled && onMax}\r\n                        >\r\n                            max\r\n                        </InputAddonText>\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nFormItemWithMaxAddon.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\n// loadWithCameraOpen prop: if true, load page with camera scanning open\r\nexport const DestinationAddressSingle = ({\r\n    onScan,\r\n    loadWithCameraOpen,\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    addonAfter={\r\n                        <ScanQRCode\r\n                            loadWithCameraOpen={loadWithCameraOpen}\r\n                            onScan={onScan}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const DestinationAddressMulti = ({ inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <TextArea\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressMulti.propTypes = {\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const Bip70AddressSingle = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    readOnly={true}\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nBip70AddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const SelfMintAuthCode = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedLockOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintAuthCode.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const SelfMintPurchaseAmount = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    const logoUrl = authPubKeys[0].imageUrl;\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    style={{ width: '60%', textAlign: 'left' }}\r\n                    type=\"number\"\r\n                    step={0.01}\r\n                    precision={2}\r\n                    prefix={\r\n                        <img\r\n                            src={logoUrl}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintPurchaseAmount.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const CurrencySelectDropdown = selectProps => {\r\n    const { Option } = Select;\r\n\r\n    // Build select dropdown from currency.fiatCurrencies\r\n    const currencyMenuOptions = [];\r\n    const currencyKeys = Object.keys(currency.fiatCurrencies);\r\n    for (let i = 0; i < currencyKeys.length; i += 1) {\r\n        const currencyMenuOption = {};\r\n        currencyMenuOption.value =\r\n            currency.fiatCurrencies[currencyKeys[i]].slug;\r\n        currencyMenuOption.label = `${\r\n            currency.fiatCurrencies[currencyKeys[i]].name\r\n        } (${currency.fiatCurrencies[currencyKeys[i]].symbol})`;\r\n        currencyMenuOptions.push(currencyMenuOption);\r\n    }\r\n    const currencyOptions = currencyMenuOptions.map(currencyMenuOption => {\r\n        return (\r\n            <Option\r\n                key={currencyMenuOption.value}\r\n                value={currencyMenuOption.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currencyMenuOption.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            className=\"select-after\"\r\n            style={{\r\n                width: '100%',\r\n            }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n};\r\n\r\n// export const AddressValidators = () => {\r\n//     const { BCH } = useBCH();\r\n\r\n//     return {\r\n//         safelyDetectAddressFormat: value => {\r\n//             try {\r\n//                 return BCH.Address.detectAddressFormat(value);\r\n//             } catch (error) {\r\n//                 return null;\r\n//             }\r\n//         },\r\n//         isSLPAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'slpaddr',\r\n//         isBCHAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'cashaddr',\r\n//         isLegacyAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'legacy',\r\n//     }();\r\n// };\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatBalance } from '@utils/cashMethods';\r\nimport { BalanceHeaderWrap } from '@components/Common/Atoms';\r\n\r\nconst BalanceHeader = ({ balance, ticker }) => {\r\n    return (\r\n        <BalanceHeaderWrap>\r\n            {balance} {ticker}\r\n        </BalanceHeaderWrap>\r\n    );\r\n};\r\n\r\n// balance may be a number (XEC balance) or a BigNumber object (token balance)\r\nBalanceHeader.propTypes = {\r\n    balance: PropTypes.oneOfType([\r\n        PropTypes.number, \r\n        PropTypes.object, \r\n        PropTypes.string\r\n    ]),\r\n    ticker: PropTypes.string,\r\n};\r\n\r\nexport default BalanceHeader;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BalanceHeaderFiatWrap } from '@components/Common/Atoms';\r\nimport { currency } from '@components/Common/Ticker.js';\r\n\r\nconst BalanceHeaderFiat = ({ balance, settings, fiatPrice }) => {\r\n    return (\r\n        <BalanceHeaderFiatWrap>\r\n            {settings\r\n                ? `${currency.fiatCurrencies[settings.fiatCurrency].symbol} `\r\n                : '$ '}\r\n            {parseFloat((balance * fiatPrice).toFixed(2)).toLocaleString()}{' '}\r\n            {settings\r\n                ? `${currency.fiatCurrencies[\r\n                      settings.fiatCurrency\r\n                  ].slug.toUpperCase()} `\r\n                : 'USD'}\r\n        </BalanceHeaderFiatWrap>\r\n    );\r\n};\r\n\r\nBalanceHeaderFiat.propTypes = {\r\n    balance: PropTypes.number,\r\n    settings: PropTypes.object,\r\n    fiatPrice: PropTypes.number,\r\n};\r\n\r\nexport default BalanceHeaderFiat;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArrowUpOutlined,\r\n    ArrowDownOutlined,\r\n    ExperimentOutlined,\r\n    ExclamationOutlined,\r\n} from '@ant-design/icons';\r\nimport { currency } from '@components/Common/Ticker';\r\nimport makeBlockie from 'ethereum-blockies-base64';\r\nimport { Img } from 'react-image';\r\nimport { formatBalance } from '@utils/cashMethods';\r\nimport { authPubKeys } from '@utils/selfMint';\r\n\r\nconst SentTx = styled(ArrowUpOutlined)`\r\n    color: ${props => props.theme.secondary} !important;\r\n`;\r\nconst ReceivedTx = styled(ArrowDownOutlined)`\r\n    color: ${props => props.theme.primary} !important;\r\n`;\r\nconst GenesisTx = styled(ExperimentOutlined)`\r\n    color: ${props => props.theme.primary} !important;\r\n`;\r\nconst UnparsedTx = styled(ExclamationOutlined)`\r\n    color: ${props => props.theme.primary} !important;\r\n`;\r\nconst DateType = styled.div`\r\n    text-align: left;\r\n    padding: 12px;\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\nconst OpReturnType = styled.span`\r\n    text-align: left;\r\n    width: 300%;\r\n    max-height: 200px;\r\n    padding: 3px;\r\n    margin: auto;\r\n    word-break: break-word;\r\n    padding-left: 13px;\r\n    padding-right: 30px;\r\n`;\r\nconst SentLabel = styled.span`\r\n    font-weight: bold;\r\n    color: ${props => props.theme.secondary} !important;\r\n`;\r\nconst MintedLabel = styled.span`\r\n    font-weight: bold;\r\n    color: ${props => props.theme.secondary} !important;\r\n`;\r\nconst ReceivedLabel = styled.span`\r\n    font-weight: bold;\r\n    color: ${props => props.theme.primary} !important;\r\n`;\r\nconst CashtabMessageLabel = styled.span`\r\n    text-align: left;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.primary} !important;\r\n    white-space: nowrap;\r\n`;\r\nconst MessageLabel = styled.span`\r\n    text-align: left;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.secondary} !important;\r\n    white-space: nowrap;\r\n`;\r\nconst ReplyMessageLabel = styled.span`\r\n    color: ${props => props.theme.primary} !important;\r\n`;\r\nconst TxIcon = styled.div`\r\n    svg {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n    height: 32px;\r\n    width: 32px;\r\n    @media screen and (max-width: 500px) {\r\n        svg {\r\n            width: 24px;\r\n            height: 24px;\r\n        }\r\n        height: 24px;\r\n        width: 24px;\r\n    }\r\n`;\r\n\r\nconst TxInfo = styled.div`\r\n    padding: 12px;\r\n    font-size: 1rem;\r\n    text-align: right;\r\n\r\n    color: ${props =>\r\n        props.outgoing ? props.theme.secondary : props.theme.primary};\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\nconst TxFiatPrice = styled.span`\r\n    font-size: 0.8rem;\r\n`;\r\nconst TokenInfo = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 50%;\r\n    grid-template-columns: 24px auto;\r\n    padding: 12px;\r\n    font-size: 1rem;\r\n\r\n    color: ${props =>\r\n        props.outgoing ? props.theme.secondary : props.theme.primary};\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 0.8rem;\r\n        grid-template-columns: 16px auto;\r\n    }\r\n`;\r\nconst TxTokenIcon = styled.div`\r\n    img {\r\n        height: 24px;\r\n        width: 24px;\r\n    }\r\n    @media screen and (max-width: 500px) {\r\n        img {\r\n            height: 16px;\r\n            width: 16px;\r\n        }\r\n    }\r\n    grid-column-start: 1;\r\n    grid-column-end: span 1;\r\n    grid-row-start: 1;\r\n    grid-row-end: span 2;\r\n    align-self: center;\r\n`;\r\nconst TokenTxAmt = styled.div`\r\n    padding-left: 12px;\r\n    text-align: right;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\nconst TokenName = styled.div`\r\n    padding-left: 12px;\r\n    font-size: 0.8rem;\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 0.6rem;\r\n    }\r\n    text-align: right;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst TxWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 36px 30% 50%;\r\n\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 25px;\r\n    border-radius: 16px;\r\n    background: ${props => props.theme.tokenListItem.background};\r\n    margin-bottom: 12px;\r\n    box-shadow: ${props => props.theme.tokenListItem.boxShadow};\r\n\r\n    :hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: rgb(136 172 243 / 25%) 0px 10px 30px,\r\n            rgb(0 0 0 / 3%) 0px 1px 1px, rgb(0 51 167 / 10%) 0px 10px 20px;\r\n        transition: all 0.8s cubic-bezier(0.075, 0.82, 0.165, 1) 0s;\r\n    }\r\n    @media screen and (max-width: 500px) {\r\n        grid-template-columns: 24px 30% 50%;\r\n        padding: 12px 12px;\r\n    }\r\n`;\r\n\r\nconst Tx = ({ data, fiatPrice, fiatCurrency, isExternalMint = false }) => {\r\n    const txDate =\r\n        typeof data.blocktime === 'undefined'\r\n        || data.blocktime === 0\r\n            ? new Date().toLocaleDateString()\r\n            : new Date(data.blocktime * 1000).toLocaleDateString();\r\n    // if data only includes height and txid, then the tx could not be parsed by cashtab\r\n    // render as such but keep link to block explorer\r\n    let unparsedTx = false;\r\n    if (!Object.keys(data).includes('outgoingTx')) {\r\n        unparsedTx = true;\r\n    }\r\n\r\n    const srcUrls = []\r\n    if (data.tokenTx) {\r\n        srcUrls.push([`${currency.tokenIconsUrl}/32/${data.tokenInfo.tokenId}.png`]);\r\n        const authPubKey = authPubKeys.find(authObj => \r\n            authObj.tokenId == data.tokenInfo.tokenId && authObj.imageUrl\r\n        );\r\n        if (authPubKey)\r\n            srcUrls.push(authPubKey.imageUrl);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {unparsedTx ? (\r\n                <TxWrapper>\r\n                    <TxIcon>\r\n                        <UnparsedTx />\r\n                    </TxIcon>\r\n                    <DateType>\r\n                        <ReceivedLabel>Unparsed</ReceivedLabel>\r\n                        <br />\r\n                        {txDate}\r\n                    </DateType>\r\n                    <TxInfo>Open in Explorer</TxInfo>\r\n                </TxWrapper>\r\n            ) : (\r\n                <TxWrapper>\r\n                    <TxIcon>\r\n                        {data.outgoingTx ? (\r\n                            <>\r\n                                {data.tokenTx &&\r\n                                data.tokenInfo.transactionType === 'GENESIS' ? (\r\n                                    <GenesisTx />\r\n                                ) : (\r\n                                    <SentTx />\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <ReceivedTx />\r\n                        )}\r\n                    </TxIcon>\r\n                    <DateType>\r\n                        {data.outgoingTx ? (\r\n                            <>\r\n                                {data.tokenTx &&\r\n                                data.tokenInfo.transactionType === 'GENESIS' ? (\r\n                                    <ReceivedLabel>Genesis</ReceivedLabel>\r\n                                ) : (\r\n                                    <>\r\n                                        {isExternalMint ? (\r\n                                            <MintedLabel>Minted</MintedLabel>\r\n                                        ) : (\r\n                                            <SentLabel>Sent</SentLabel>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <ReceivedLabel>Received</ReceivedLabel>\r\n                        )}\r\n                        <br />\r\n                        {isExternalMint ? (\r\n                            <>\r\n                                {data.block == -1 ? (\r\n                                    <>\r\n                                        unconfirmed\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        Block {data.block}\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {txDate}\r\n                            </>\r\n                        )}\r\n                    </DateType>\r\n                    {data.tokenTx ? (\r\n                        <TokenInfo outgoing={data.outgoingTx}>\r\n                            {data.tokenTx && data.tokenInfo ? (\r\n                                <>\r\n                                    <TxTokenIcon>\r\n                                        {currency.tokenIconsUrl !== '' ? (\r\n                                            <Img\r\n                                                src={srcUrls}\r\n                                                unloader={\r\n                                                    <img\r\n                                                        alt={`identicon of tokenId ${data.tokenInfo.tokenId} `}\r\n                                                        style={{\r\n                                                            borderRadius: '50%',\r\n                                                        }}\r\n                                                        key={`identicon-${data.tokenInfo.tokenId}`}\r\n                                                        src={makeBlockie(\r\n                                                            data.tokenInfo\r\n                                                                .tokenId,\r\n                                                        )}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                alt={`identicon of tokenId ${data.tokenInfo.tokenId} `}\r\n                                                style={{\r\n                                                    borderRadius: '50%',\r\n                                                }}\r\n                                                key={`identicon-${data.tokenInfo.tokenId}`}\r\n                                                src={makeBlockie(\r\n                                                    data.tokenInfo.tokenId,\r\n                                                )}\r\n                                            />\r\n                                        )}\r\n                                    </TxTokenIcon>\r\n                                    {data.outgoingTx ? (\r\n                                        <>\r\n                                            {data.tokenInfo.transactionType ===\r\n                                            'GENESIS' ? (\r\n                                                <>\r\n                                                    <TokenTxAmt>\r\n                                                        +{' '}\r\n                                                        {data.tokenInfo.qtyReceived.toString()}\r\n                                                        &nbsp;\r\n                                                        {\r\n                                                            data.tokenInfo\r\n                                                                .tokenTicker\r\n                                                        }\r\n                                                    </TokenTxAmt>\r\n                                                    <TokenName>\r\n                                                        {\r\n                                                            data.tokenInfo\r\n                                                                .tokenName\r\n                                                        }\r\n                                                    </TokenName>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <TokenTxAmt>\r\n                                                        -{' '}\r\n                                                        {data.tokenInfo.qtySent.toString()}\r\n                                                        &nbsp;\r\n                                                        {\r\n                                                            data.tokenInfo\r\n                                                                .tokenTicker\r\n                                                        }\r\n                                                    </TokenTxAmt>\r\n                                                    <TokenName>\r\n                                                        {\r\n                                                            data.tokenInfo\r\n                                                                .tokenName\r\n                                                        }\r\n                                                    </TokenName>\r\n                                                </>\r\n                                            )}\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <TokenTxAmt>\r\n                                                +{' '}\r\n                                                {data.tokenInfo.qtyReceived.toString()}\r\n                                                &nbsp;\r\n                                                {data.tokenInfo.tokenTicker}\r\n                                            </TokenTxAmt>\r\n                                            <TokenName>\r\n                                                {data.tokenInfo.tokenName}\r\n                                            </TokenName>\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <span>Token Tx</span>\r\n                            )}\r\n                        </TokenInfo>\r\n                    ) : (\r\n                        <>\r\n                            <TxInfo outgoing={data.outgoingTx}>\r\n                                {data.outgoingTx ? (\r\n                                    <>\r\n                                        -{' '}\r\n                                        {data.amountSent}{' '}\r\n                                        {currency.ticker}\r\n                                        <br />\r\n                                        {fiatPrice !== null &&\r\n                                            !isNaN(data.amountSent) && (\r\n                                                <TxFiatPrice>\r\n                                                    -{' '}\r\n                                                    {\r\n                                                        currency.fiatCurrencies[\r\n                                                            fiatCurrency\r\n                                                        ].symbol\r\n                                                    }\r\n                                                    {(data.amountSent\r\n                                                        * fiatPrice\r\n                                                    ).toFixed(2)}{' '}\r\n                                                    {\r\n                                                        currency.fiatCurrencies\r\n                                                            .fiatCurrency\r\n                                                    }\r\n                                                </TxFiatPrice>\r\n                                            )}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        +{' '}\r\n                                        {formatBalance(\r\n                                            data.amountReceived\r\n                                        )}{' '}\r\n                                        {currency.ticker}\r\n                                        <br />\r\n                                        {fiatPrice !== null &&\r\n                                            !isNaN(data.amountReceived) && (\r\n                                                <TxFiatPrice>\r\n                                                    +{' '}\r\n                                                    {\r\n                                                        currency.fiatCurrencies[\r\n                                                            fiatCurrency\r\n                                                        ].symbol\r\n                                                    }\r\n                                                    {(data.amountReceived \r\n                                                        * fiatPrice\r\n                                                    ).toFixed(2)}{' '}\r\n                                                    {\r\n                                                        currency.fiatCurrencies\r\n                                                            .fiatCurrency\r\n                                                    }\r\n                                                </TxFiatPrice>\r\n                                            )}\r\n                                    </>\r\n                                )}\r\n                            </TxInfo>\r\n                        </>\r\n                    )}\r\n                    {data.opReturnMessage && (\r\n                        <>\r\n                            <br />\r\n                            <OpReturnType>\r\n                                {data.isCashtabMessage ? (\r\n                                    <CashtabMessageLabel>\r\n                                        Cashtab Message\r\n                                    </CashtabMessageLabel>\r\n                                ) : (\r\n                                    <MessageLabel>\r\n                                        External Message\r\n                                    </MessageLabel>\r\n                                )}\r\n                                <br />\r\n                                {data.opReturnMessage\r\n                                    ? Buffer.from(\r\n                                          data.opReturnMessage,\r\n                                      ).toString()\r\n                                    : ''}\r\n                                {!data.outgoingTx && data.replyAddress ? (\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: `/send`,\r\n                                            state: {\r\n                                                replyAddress: data.replyAddress,\r\n                                            },\r\n                                        }}\r\n                                    >\r\n                                        <br />\r\n                                        <br />\r\n                                        <ReplyMessageLabel>\r\n                                            Reply To Message\r\n                                        </ReplyMessageLabel>\r\n                                    </Link>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                            </OpReturnType>\r\n                        </>\r\n                    )}\r\n                </TxWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTx.propTypes = {\r\n    data: PropTypes.object,\r\n    fiatPrice: PropTypes.number,\r\n    fiatCurrency: PropTypes.string,\r\n    isExternalMint: PropTypes.bool,\r\n};\r\n\r\nexport default Tx;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport makeBlockie from 'ethereum-blockies-base64';\r\nimport { Img } from 'react-image';\r\nimport { currency } from '@components/Common/Ticker';\r\nimport { authPubKeys } from '@utils/selfMint';\r\n\r\nconst TokenIcon = styled.div`\r\n    height: 32px;\r\n    width: 32px;\r\n`;\r\n\r\nconst BalanceAndTicker = styled.div`\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst TokenName = styled.div`\r\n    font-size: 1rem;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 25px;\r\n    border-radius: 16px;\r\n    background: ${props => props.theme.tokenListItem.background};\r\n    margin-bottom: 10px;\r\n    box-shadow: ${props => props.theme.tokenListItem.boxShadow};\r\n    border: 1px solid ${props => props.theme.tokenListItem.border};\r\n\r\n    :hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: rgb(136 172 243 / 25%) 0px 10px 30px,\r\n            rgb(0 0 0 / 3%) 0px 1px 1px, rgb(0 51 167 / 10%) 0px 10px 20px;\r\n        transition: all 0.8s cubic-bezier(0.075, 0.82, 0.165, 1) 0s;\r\n    }\r\n`;\r\n\r\nconst TokenListItem = ({ ticker, balance, tokenId, name }) => {\r\n    const srcUrls = [`${currency.tokenIconsUrl}/32/${tokenId}.png`]\r\n    const authPubKey = authPubKeys.find(authObj => \r\n        authObj.tokenId == tokenId && authObj.imageUrl\r\n    );\r\n    if (authPubKey)\r\n        srcUrls.push(authPubKey.imageUrl);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <TokenIcon>\r\n                {currency.tokenIconsUrl !== '' ? (\r\n                    <Img\r\n                        src={srcUrls}\r\n                        width={32}\r\n                        height={32}\r\n                        unloader={\r\n                            <img\r\n                                alt={`identicon of tokenId ${tokenId} `}\r\n                                height=\"32\"\r\n                                width=\"32\"\r\n                                style={{\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                                key={`identicon-${tokenId}`}\r\n                                src={makeBlockie(tokenId)}\r\n                            />\r\n                        }\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        alt={`identicon of tokenId ${tokenId} `}\r\n                        height=\"32\"\r\n                        width=\"32\"\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                        }}\r\n                        key={`identicon-${tokenId}`}\r\n                        src={makeBlockie(tokenId)}\r\n                    />\r\n                )}\r\n            </TokenIcon>\r\n            <TokenName>\r\n                <strong>{name}</strong>\r\n            </TokenName>\r\n            <BalanceAndTicker>\r\n                {balance} <strong>{ticker}</strong>\r\n            </BalanceAndTicker>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nTokenListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    ticker: PropTypes.string,\r\n    balance: PropTypes.string,\r\n    tokenId: PropTypes.string,\r\n};\r\n\r\nexport default TokenListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TokenListItem from './TokenListItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TokenList = ({ tokens }) => {\r\n    return (\r\n        <div>\r\n            {tokens.map(token => (\r\n                <Link key={token.tokenId} to={`/send-token/${token.tokenId}`}>\r\n                    <TokenListItem\r\n                        ticker={token.info.ticker}\r\n                        tokenId={token.tokenId}\r\n                        name={token.info.name}\r\n                        balance={(token.balance / (10 ** token.info.decimals)).toString()}\r\n                    />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nTokenList.propTypes = {\r\n    tokens: PropTypes.array,\r\n};\r\n\r\nexport default TokenList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { WalletContext } from '@utils/context';\r\nimport { Input, Form, Modal } from 'antd';\r\nimport { AntdFormWrapper } from '@components/Common/EnhancedInputs';\r\nimport {\r\n    ExclamationCircleOutlined,\r\n    PlusSquareOutlined,\r\n    ImportOutlined,\r\n    LockOutlined,\r\n} from '@ant-design/icons';\r\nimport PrimaryButton, {\r\n    SecondaryButton,\r\n    SmartButton,\r\n} from '@components/Common/PrimaryButton';\r\nimport { currency } from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\n\r\nexport const WelcomeText = styled.p`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin-bottom: 60px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const WelcomeLink = styled.a`\r\n    text-decoration: underline;\r\n    color: ${props => props.theme.primary};\r\n`;\r\n\r\nconst OnBoarding = () => {\r\n    const ContextValue = React.useContext(WalletContext);\r\n    const { createWallet, validateMnemonic } = ContextValue;\r\n    const [formData, setFormData] = useState({\r\n        dirty: true,\r\n        mnemonic: '',\r\n    });\r\n\r\n    const [seedInput, openSeedInput] = useState(false);\r\n    const [isValidMnemonic, setIsValidMnemonic] = useState(false);\r\n    const { confirm } = Modal;\r\n\r\n    useEffect(() => {\r\n        // If onboarding via BIP70 invoice, make new wallet immediately\r\n        const params = (new URL(window.location)).searchParams;\r\n        if (params.get('uri')) {\r\n            // Event(\"Category\", \"Action\", \"Label\")\r\n            // Track number of created wallets from onboarding\r\n            Event('Onboarding.js', 'Create Wallet', 'New');\r\n            createWallet();\r\n        }\r\n    }, []);\r\n\r\n    async function submit() {\r\n        setFormData({\r\n            ...formData,\r\n            dirty: false,\r\n        });\r\n\r\n        if (!formData.mnemonic) {\r\n            return;\r\n        }\r\n        // Event(\"Category\", \"Action\", \"Label\")\r\n        // Track number of created wallets from onboarding\r\n        Event('Onboarding.js', 'Create Wallet', 'Imported');\r\n        createWallet(formData.mnemonic);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { value, name } = e.target;\r\n\r\n        // Validate mnemonic on change\r\n        // Import button should be disabled unless mnemonic is valid\r\n        setIsValidMnemonic(validateMnemonic(value));\r\n\r\n        setFormData(p => ({ ...p, [name]: value }));\r\n    };\r\n\r\n    function showBackupConfirmModal() {\r\n        confirm({\r\n            title: \"Don't forget to back up your wallet\",\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `Once your wallet is created you can back it up by writing down your 12-word seed. You can find your seed on the Settings page. If you are browsing in Incognito mode or if you clear your browser history, you will lose any funds that are not backed up!`,\r\n            okText: 'Okay, make me a wallet!',\r\n            onOk() {\r\n                // Event(\"Category\", \"Action\", \"Label\")\r\n                // Track number of created wallets from onboarding\r\n                Event('Onboarding.js', 'Create Wallet', 'New');\r\n                createWallet();\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Welcome to Cashtab!</h2>\r\n            <WelcomeText>\r\n                Cashtab is an{' '}\r\n                <WelcomeLink\r\n                    href=\"https://github.com/badger-cash/cashtab\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    open source,\r\n                </WelcomeLink>{' '}\r\n                non-custodial web wallet for {currency.name}.\r\n                <br />\r\n                <br />\r\n                Want to learn more?{' '}\r\n                <WelcomeLink\r\n                    href=\"https://docs.cashtabapp.com/docs/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    Check out the Cashtab documentation.\r\n                </WelcomeLink>\r\n            </WelcomeText>\r\n\r\n            <PrimaryButton onClick={() => showBackupConfirmModal()}>\r\n                <PlusSquareOutlined /> New Wallet\r\n            </PrimaryButton>\r\n\r\n            <SecondaryButton onClick={() => openSeedInput(!seedInput)}>\r\n                <ImportOutlined /> Import Wallet\r\n            </SecondaryButton>\r\n            {seedInput && (\r\n                <AntdFormWrapper>\r\n                    <Form style={{ width: 'auto' }}>\r\n                        <Form.Item\r\n                            validateStatus={\r\n                                !formData.dirty && !formData.mnemonic\r\n                                    ? 'error'\r\n                                    : ''\r\n                            }\r\n                            help={\r\n                                !formData.mnemonic || !isValidMnemonic\r\n                                    ? 'Valid mnemonic seed phrase required'\r\n                                    : ''\r\n                            }\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined />}\r\n                                type=\"email\"\r\n                                placeholder=\"mnemonic (seed phrase)\"\r\n                                name=\"mnemonic\"\r\n                                autoComplete=\"off\"\r\n                                onChange={e => handleChange(e)}\r\n                                required\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <SmartButton\r\n                            disabled={!isValidMnemonic}\r\n                            onClick={() => submit()}\r\n                        >\r\n                            Import\r\n                        </SmartButton>\r\n                    </Form>\r\n                </AntdFormWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OnBoarding;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport RawQRCode from 'qrcode.react';\r\nimport {\r\n    currency,\r\n    isValidCashPrefix,\r\n    isValidTokenPrefix,\r\n} from '@components/Common/Ticker.js';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\nimport { convertToEcashPrefix } from '@utils/cashMethods';\r\n\r\nexport const StyledRawQRCode = styled(RawQRCode)`\r\n    cursor: pointer;\r\n    border-radius: 26px;\r\n    background: ${props => props.theme.qr.background};\r\n    box-shadow: ${props => props.theme.qr.shadow};\r\n    margin-bottom: 10px;\r\n    path:first-child {\r\n        fill: ${props => props.theme.qr.background};\r\n    }\r\n    :hover {\r\n        border-color: ${({ xec = 0, ...props }) =>\r\n            xec === 1 ? props.theme.primary : props.theme.qr.token};\r\n    }\r\n    @media (max-width: 768px) {\r\n        border-radius: 18px;\r\n        width: 170px;\r\n        height: 170px;\r\n    }\r\n`;\r\n\r\nconst Copied = styled.div`\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: ${({ xec = 0, ...props }) =>\r\n        xec === 1 ? props.theme.primary : props.theme.qr.token};\r\n    border: 1px solid;\r\n    border-color: ${({ xec = 0, ...props }) =>\r\n        xec === 1\r\n            ? props.theme.qr.copyBorderCash\r\n            : props.theme.qr.copyBorderToken};\r\n    color: ${props => props.theme.contrast};\r\n    position: absolute;\r\n    top: 65px;\r\n    padding: 30px 0;\r\n    @media (max-width: 768px) {\r\n        top: 52px;\r\n        padding: 20px 0;\r\n    }\r\n`;\r\nconst PrefixLabel = styled.span`\r\n    text-align: right;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n    @media (max-width: 400px) {\r\n        font-size: 10px;\r\n    }\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n`;\r\nconst AddressHighlightTrim = styled.span`\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n    @media (max-width: 400px) {\r\n        font-size: 10px;\r\n    }\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n`;\r\n\r\nconst CustomInput = styled.div`\r\n    font-size: 12px;\r\n    color: ${({ xec = 0, ...props }) =>\r\n        xec === 1\r\n            ? props.theme.wallet.text.secondary\r\n            : props.theme.brandSecondary};\r\n    text-align: center;\r\n    cursor: pointer;\r\n    margin-bottom: 0px;\r\n    padding: 6px 0;\r\n    font-family: 'Roboto Mono', monospace;\r\n    border-radius: 5px;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n\r\n    input {\r\n        border: none;\r\n        width: 100%;\r\n        text-align: center;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        color: ${props => props.theme.wallet.text.primary};\r\n        padding: 10px 0;\r\n        background: transparent;\r\n        margin-bottom: 15px;\r\n        display: none;\r\n    }\r\n    input:focus {\r\n        outline: none;\r\n    }\r\n    input::selection {\r\n        background: transparent;\r\n        color: ${props => props.theme.wallet.text.primary};\r\n    }\r\n    @media (max-width: 768px) {\r\n        font-size: 10px;\r\n        input {\r\n            font-size: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n    @media (max-width: 400px) {\r\n        font-size: 7px;\r\n        input {\r\n            font-size: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QRCode = ({\r\n    address,\r\n    size = 210,\r\n    onClick = () => null,\r\n    ...otherProps\r\n}) => {\r\n    address = address ? convertToEcashPrefix(address) : '';\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const trimAmount = 8;\r\n    const address_trim = address ? address.length - trimAmount : '';\r\n    const addressSplit = address ? address.split(':') : [''];\r\n    const addressPrefix = addressSplit[0];\r\n    const prefixLength = addressPrefix.length + 1;\r\n\r\n    const isCash = isValidCashPrefix(address);\r\n\r\n    const txtRef = React.useRef(null);\r\n\r\n    const handleOnClick = evt => {\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n        }, 1500);\r\n        onClick(evt);\r\n    };\r\n\r\n    const handleOnCopy = () => {\r\n        // Event.(\"Category\", \"Action\", \"Label\")\r\n        // xec or etoken?\r\n        let eventLabel = currency.ticker;\r\n        if (address) {\r\n            const isToken = isValidTokenPrefix(address);\r\n            if (isToken) {\r\n                eventLabel = currency.tokenTicker;\r\n            }\r\n            // Event('Category', 'Action', 'Label')\r\n            Event('Wallet', 'Copy Address', eventLabel);\r\n        }\r\n\r\n        setVisible(true);\r\n        setTimeout(() => {\r\n            txtRef.current.select();\r\n        }, 100);\r\n    };\r\n\r\n    return (\r\n        <CopyToClipboard\r\n            style={{\r\n                display: 'inline-block',\r\n                width: '100%',\r\n                position: 'relative',\r\n            }}\r\n            text={address}\r\n            onCopy={handleOnCopy}\r\n        >\r\n            <div style={{ position: 'relative' }} onClick={handleOnClick}>\r\n                <Copied\r\n                    xec={address && isCash ? 1 : 0}\r\n                    style={{ display: visible ? null : 'none' }}\r\n                >\r\n                    Copied <br />\r\n                    <span style={{ fontSize: '12px' }}>{address}</span>\r\n                </Copied>\r\n\r\n                <StyledRawQRCode\r\n                    id=\"borderedQRCode\"\r\n                    value={address || ''}\r\n                    size={size}\r\n                    xec={address && isCash ? 1 : 0}\r\n                    renderAs={'svg'}\r\n                    includeMargin\r\n                    imageSettings={{\r\n                        src:\r\n                            address && isCash\r\n                                ? currency.logo\r\n                                : currency.tokenLogo,\r\n                        x: null,\r\n                        y: null,\r\n                        height: 24,\r\n                        width: 24,\r\n                        excavate: true,\r\n                    }}\r\n                />\r\n\r\n                {address && (\r\n                    <CustomInput\r\n                        className=\"notranslate\"\r\n                        xec={address && isCash ? 1 : 0}\r\n                    >\r\n                        <input\r\n                            ref={txtRef}\r\n                            readOnly\r\n                            value={address}\r\n                            spellCheck=\"false\"\r\n                            type=\"text\"\r\n                        />\r\n                        <PrefixLabel>\r\n                            {address.slice(0, prefixLength)}\r\n                        </PrefixLabel>\r\n                        <AddressHighlightTrim>\r\n                            {address.slice(\r\n                                prefixLength,\r\n                                prefixLength + trimAmount,\r\n                            )}\r\n                        </AddressHighlightTrim>\r\n                        {address.slice(prefixLength + trimAmount, address_trim)}\r\n                        <AddressHighlightTrim>\r\n                            {address.slice(-trimAmount)}\r\n                        </AddressHighlightTrim>\r\n                    </CustomInput>\r\n                )}\r\n            </div>\r\n        </CopyToClipboard>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Tx from './Tx';\r\n\r\nexport const TxLink = styled.a``;\r\n\r\nconst TxHistory = ({ txs, fiatPrice, fiatCurrency }) => {\r\n    return (\r\n        <div>\r\n            {txs.map(tx => (\r\n                <TxLink\r\n                    key={tx.txid}\r\n                    href={`https://explorer.cert.cash/tx/${tx.txid}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    <Tx\r\n                        data={tx}\r\n                        fiatPrice={fiatPrice}\r\n                        fiatCurrency={fiatCurrency}\r\n                    />\r\n                </TxLink>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nTxHistory.propTypes = {\r\n    txs: PropTypes.array,\r\n    fiatPrice: PropTypes.number,\r\n    fiatCurrency: PropTypes.string,\r\n};\r\n\r\nexport default TxHistory;\r\n","import React, { useEffect }  from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { WalletContext } from '@utils/context';\r\nimport OnBoarding from '@components/OnBoarding/OnBoarding';\r\nimport { QRCode } from '@components/Common/QRCode';\r\nimport { currency } from '@components/Common/Ticker.js';\r\nimport { Link } from 'react-router-dom';\r\nimport TokenList from './TokenList';\r\nimport TxHistory from './TxHistory';\r\nimport ApiError from '@components/Common/ApiError';\r\nimport BalanceHeader from '@components/Common/BalanceHeader';\r\nimport BalanceHeaderFiat from '@components/Common/BalanceHeaderFiat';\r\nimport { LoadingCtn, ZeroBalanceHeader } from '@components/Common/Atoms';\r\nimport { getWalletState } from '@utils/cashMethods';\r\nimport { getUrlFromQueryString } from '@utils/bip70';\r\n\r\nexport const Tabs = styled.div`\r\n    margin: auto;\r\n    margin-bottom: 12px;\r\n    display: inline-block;\r\n    text-align: center;\r\n`;\r\nexport const TabLabel = styled.button`\r\n    :focus,\r\n    :active {\r\n        outline: none;\r\n    }\r\n\r\n    border: none;\r\n    background: none;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    ${({ active, ...props }) =>\r\n        active &&\r\n        `    \r\n        color: ${props.theme.primary};       \r\n  `}\r\n`;\r\nexport const TabLine = styled.div`\r\n    margin: auto;\r\n    transition: margin-left 0.5s ease-in-out, width 0.5s 0.1s;\r\n    height: 4px;\r\n    border-radius: 5px;\r\n    background-color: ${props => props.theme.primary};\r\n    pointer-events: none;\r\n\r\n    margin-left: 69.5%;\r\n    width: 29%;\r\n\r\n    ${({ left, ...props }) =>\r\n        left &&\r\n        `\r\n        margin-left: 3%\r\n        width: 63%;\r\n  `}\r\n`;\r\nexport const TabPane = styled.div`\r\n    ${({ active }) =>\r\n        !active &&\r\n        `    \r\n        display: none;\r\n  `}\r\n`;\r\n\r\nexport const SwitchBtnCtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: space-between;\r\n    margin-bottom: 15px;\r\n    .nonactiveBtn {\r\n        color: ${props => props.theme.wallet.text.secondary};\r\n        background: ${props =>\r\n            props.theme.wallet.switch.inactive.background} !important;\r\n        box-shadow: none !important;\r\n    }\r\n    .slpActive {\r\n        background: ${props =>\r\n            props.theme.wallet.switch.activeToken.background} !important;\r\n        box-shadow: ${props =>\r\n            props.theme.wallet.switch.activeToken.shadow} !important;\r\n    }\r\n`;\r\n\r\nexport const SwitchBtn = styled.div`\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n    color: ${props => props.theme.contrast};\r\n    font-size: 14px;\r\n    padding: 6px 0;\r\n    width: 100px;\r\n    margin: 0 1px;\r\n    text-decoration: none;\r\n    background: ${props => props.theme.primary};\r\n    box-shadow: ${props => props.theme.wallet.switch.activeCash.shadow};\r\n    user-select: none;\r\n    :first-child {\r\n        border-radius: 100px 0 0 100px;\r\n    }\r\n    :nth-child(2) {\r\n        border-radius: 0 100px 100px 0;\r\n    }\r\n`;\r\n\r\nexport const Links = styled(Link)`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 10px 0 20px 0;\r\n    border: 1px solid ${props => props.theme.wallet.text.secondary};\r\n    padding: 14px 0;\r\n    display: inline-block;\r\n    border-radius: 3px;\r\n    transition: all 200ms ease-in-out;\r\n    svg {\r\n        fill: ${props => props.theme.wallet.text.secondary};\r\n    }\r\n    :hover {\r\n        color: ${props => props.theme.primary};\r\n        border-color: ${props => props.theme.primary};\r\n        svg {\r\n            fill: ${props => props.theme.primary};\r\n        }\r\n    }\r\n    @media (max-width: 768px) {\r\n        padding: 10px 0;\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 16px;\r\n    margin: 0 0 20px 0;\r\n    border: 1px solid ${props => props.theme.wallet.text.secondary};\r\n    padding: 14px 0;\r\n    display: inline-block;\r\n    border-radius: 3px;\r\n    transition: all 200ms ease-in-out;\r\n    svg {\r\n        fill: ${props => props.theme.wallet.text.secondary};\r\n        transition: all 200ms ease-in-out;\r\n    }\r\n    :hover {\r\n        color: ${props => props.theme.primary};\r\n        border-color: ${props => props.theme.primary};\r\n        svg {\r\n            fill: ${props => props.theme.primary};\r\n        }\r\n    }\r\n    @media (max-width: 768px) {\r\n        padding: 10px 0;\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport const AddrSwitchContainer = styled.div`\r\n    text-align: center;\r\n    padding: 6px 0 12px 0;\r\n`;\r\n\r\nconst WalletInfo = () => {\r\n    const ContextValue = React.useContext(WalletContext);\r\n    const { wallet, fiatPrice, apiError, cashtabSettings } = ContextValue;\r\n    const walletState = getWalletState(wallet);\r\n    const { balances, parsedTxHistory, tokens } = walletState;\r\n\r\n    const [address, setAddress] = React.useState('cashAddress');\r\n    const [activeTab, setActiveTab] = React.useState('txHistory');\r\n\r\n    const hasHistory = parsedTxHistory && parsedTxHistory.length > 0;\r\n\r\n    const handleChangeAddress = () => {\r\n        setAddress(address === 'cashAddress' ? 'slpAddress' : 'cashAddress');\r\n        setActiveTab(address === 'cashAddress' ? 'tokens' : 'txHistory');\r\n    };\r\n\r\n    const prefixesArray = [\r\n        ...currency.prefixes,\r\n        ...currency.tokenPrefixes\r\n    ];\r\n\r\n    const { push } = useHistory();\r\n\r\n    useEffect(() => {\r\n        // Forward to SendBip70.js when loaded with a query string\r\n        if (\r\n            !window.location ||\r\n            !window.location.hash ||\r\n            (window.location.search == '' && window.location.hash === '#/sendBip70')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const fullQueryString = window.location.search == '' ? \r\n            window.location.hash : window.location.search;\r\n\r\n        const delimiterIndex = fullQueryString.indexOf('?');\r\n        const txInfoArr = fullQueryString\r\n            .slice(delimiterIndex+1)\r\n            .split('&');\r\n\r\n        // Iterate over this to create object\r\n        for (let i = 0; i < txInfoArr.length; i += 1) {\r\n            const delimiterIndex = txInfoArr[i].indexOf('=');\r\n            const param = txInfoArr[i]\r\n                .slice(0, delimiterIndex)\r\n                .toLowerCase();\r\n            // Forward to selfMint if auth code is specified\r\n            if (param == 'mintauth') {\r\n                console.log('has mintauth')\r\n                return push('/selfMint');\r\n            }\r\n\r\n            const encodedValue = txInfoArr[i].slice(delimiterIndex+1);\r\n            const value = decodeURIComponent(encodedValue);\r\n            const prefix = value.split(':')[0];\r\n            if (param === 'uri' && prefixesArray.includes(prefix)) {\r\n                const queryString = value.split('?')[1];\r\n                const url = getUrlFromQueryString(queryString);\r\n                if (url) {\r\n                    push('/sendBip70');\r\n                }\r\n            }\r\n        }\r\n    }, [push]);\r\n\r\n    return (\r\n        <>\r\n            {!balances.totalBalance && !apiError && !hasHistory ? (\r\n                <>\r\n                    <ZeroBalanceHeader>\r\n                        <span role=\"img\" aria-label=\"party emoji\">\r\n                            🎉\r\n                        </span>\r\n                        Congratulations on your new wallet!{' '}\r\n                        <span role=\"img\" aria-label=\"party emoji\">\r\n                            🎉\r\n                        </span>\r\n                        <br /> Start using the wallet immediately to receive{' '}\r\n                        {currency.ticker} payments, or load it up with{' '}\r\n                        {currency.ticker} to send to others\r\n                    </ZeroBalanceHeader>\r\n                    <BalanceHeader balance={0} ticker={currency.ticker} />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <BalanceHeader\r\n                        balance={balances.totalBalance}\r\n                        ticker={currency.ticker}\r\n                    />\r\n                    {fiatPrice !== null && !isNaN(balances.totalBalance) && (\r\n                        <BalanceHeaderFiat\r\n                            balance={balances.totalBalance}\r\n                            settings={cashtabSettings}\r\n                            fiatPrice={fiatPrice}\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n            {apiError && <ApiError />}\r\n\r\n            {wallet && ((wallet.Path245 && wallet.Path145) || wallet.Path1899) && (\r\n                <>\r\n                    {wallet.Path1899 ? (\r\n                        <>\r\n                            <QRCode\r\n                                id=\"borderedQRCode\"\r\n                                address={\r\n                                    address === 'slpAddress'\r\n                                        ? wallet.Path1899.slpAddress\r\n                                        : wallet.Path1899.cashAddress\r\n                                }\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <QRCode\r\n                                id=\"borderedQRCode\"\r\n                                address={\r\n                                    address === 'slpAddress'\r\n                                        ? wallet.Path245.slpAddress\r\n                                        : wallet.Path145.cashAddress\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            <SwitchBtnCtn>\r\n                <SwitchBtn\r\n                    onClick={() => handleChangeAddress()}\r\n                    className={\r\n                        address !== 'cashAddress' ? 'nonactiveBtn' : null\r\n                    }\r\n                >\r\n                    {currency.ticker}\r\n                </SwitchBtn>\r\n                <SwitchBtn\r\n                    onClick={() => handleChangeAddress()}\r\n                    className={\r\n                        address === 'cashAddress' ? 'nonactiveBtn' : 'slpActive'\r\n                    }\r\n                >\r\n                    {currency.tokenTicker}\r\n                </SwitchBtn>\r\n            </SwitchBtnCtn>\r\n            {hasHistory && parsedTxHistory && (\r\n                <>\r\n                    <Tabs>\r\n                        <TabLabel\r\n                            active={activeTab === 'txHistory'}\r\n                            onClick={() => setActiveTab('txHistory')}\r\n                        >\r\n                            Transaction History\r\n                        </TabLabel>\r\n                        <TabLabel\r\n                            active={activeTab === 'tokens'}\r\n                            onClick={() => setActiveTab('tokens')}\r\n                        >\r\n                            eTokens\r\n                        </TabLabel>\r\n                        <TabLine left={activeTab === 'txHistory'} />\r\n                    </Tabs>\r\n\r\n                    <TabPane active={activeTab === 'txHistory'}>\r\n                        <TxHistory\r\n                            txs={parsedTxHistory}\r\n                            fiatPrice={fiatPrice}\r\n                            fiatCurrency={\r\n                                cashtabSettings && cashtabSettings.fiatCurrency\r\n                                    ? cashtabSettings.fiatCurrency\r\n                                    : 'usd'\r\n                            }\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane active={activeTab === 'tokens'}>\r\n                        {tokens && tokens.length > 0 ? (\r\n                            <TokenList\r\n                                wallet={wallet}\r\n                                tokens={tokens}\r\n                                jestBCH={false}\r\n                            />\r\n                        ) : (\r\n                            <p>\r\n                                Tokens sent to your {currency.tokenTicker}{' '}\r\n                                address will appear here\r\n                            </p>\r\n                        )}\r\n                    </TabPane>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Wallet = () => {\r\n    const ContextValue = React.useContext(WalletContext);\r\n    const { wallet, previousWallet, loading } = ContextValue;\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <LoadingCtn />\r\n            ) : (\r\n                <>\r\n                    {(wallet && wallet.Path1899) ||\r\n                    (previousWallet && previousWallet.path1899) ? (\r\n                        <WalletInfo />\r\n                    ) : (\r\n                        <OnBoarding />\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Wallet;\r\n"],"sourceRoot":""}