{"version":3,"sources":["components/Common/Atoms.js","components/Common/ApiError.js","components/Common/ScanQRCode.js","components/Common/EnhancedInputs.js","assets/checkout_icon.svg","assets/styles/checkout.styles.js","components/Send/SendBip70.js"],"names":["LoadingCtn","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","primary","BalanceHeaderWrap","_templateObject2","wallet","text","BalanceHeaderFiatWrap","_templateObject3","secondary","ZeroBalanceHeader","_templateObject4","TokenParamLabel","span","_templateObject5","AlertMsg","p","_templateObject6","forms","error","ConvertAmount","_templateObject7","ApiError","React","CashLoader","StyledScanQRCode","StyledModal","Modal","QRPreview","video","ScanQRCode","_ref","loadWithCameraOpen","_ref$onScan","onScan","otherProps","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","setError","_useState5","_useState6","activeCodeReader","setActiveCodeReader","teardownCodeReader","codeReader","reset","stop","parseContent","content","type","values","isValidCashPrefix","isValidTokenPrefix","address","eventLabel","currency","ticker","split","tokenPrefix","length","tokenTicker","Event","scanForQrCode","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","BrowserQRCodeReader","getVideoInputDevices","sent","decodeFromInputVideoDevice","undefined","abrupt","t0","console","log","JSON","stringify","message","apply","arguments","useEffect","createElement","Fragment","Object","assign","onClick","ThemedQrcodeOutlined","title","onCancel","footer","Alert","description","showIcon","style","textAlign","id","TextArea","Input","AntdFormCss","css","addonBackground","border","addonForeground","selectionBackground","borders","color","AntdFormWrapper","InputAddonText","disabled","InputNumberAddonText","SendBchInput","onMax","inputProps","selectProps","activeFiatCode","Option","Select","currencyOptions","value","label","map","key","className","CurrencySelect","defaultValue","width","Form","Item","Group","compact","step","dollar","Math","pow","cashDecimals","prefix","ThemedDollarOutlined","src","logo","alt","height","lineHeight","FormItemWithMaxAddon","_ref3","_excluded3","addonAfter","DestinationAddressSingle","_ref4","_excluded4","ThemedWalletOutlined","autoComplete","DestinationAddressMulti","_ref5","_excluded5","Bip70AddressSingle","_ref6","_excluded6","readOnly","SelfMintAuthCode","_ref7","_excluded7","ThemedLockOutlined","SelfMintPurchaseAmount","_ref8","_excluded8","logoUrl","authPubKeys","imageUrl","precision","CurrencySelectDropdown","currencyMenuOptions","currencyKeys","keys","fiatCurrencies","i","currencyMenuOption","slug","concat","name","symbol","push","CheckoutHeader","CheckoutStyles","PaymentDetails","PurchaseAuthCode","Heading","h3","ListItem","CheckoutIcon","img","HorizontalSpacer","hr","_templateObject8","AgreeOverlay","_templateObject9","AgreeModal","_templateObject10","SLP","script","SendBip70","_formData$token2","_prInfoFromUrl$paymen","_prInfoFromUrl$paymen2","tokenFormattedBalance","passLoadingStatus","ContextValue","useContext","WalletContext","fiatPrice","apiError","cashtabSettings","walletState","getWalletState","tokens","balances","purchaseTokenIds","blankFormData","dirty","formData","setFormData","token","find","tokenId","tokenBalance","balance","toString","info","decimals","sendBchAddressError","_useState7","_useState8","sendBchAmountError","_useState9","_useState10","selectedCurrency","_useState11","_useState12","prInfoFromUrl","setPrInfoFromUrl","_useState13","_useState14","isModalVisible","setIsModalVisible","_useState15","_useState16","isPurchaseModalVisible","setIsPurchaseModalVisible","_useState17","_useState18","purchaseTokenAmount","_useState19","_useState20","setPostageData","_useState21","_useState22","setUsePostage","prefixesArray","_toConsumableArray","prefixes","tokenPrefixes","sleep","ms","Promise","resolve","setTimeout","history","useHistory","_useBCH","useBCH","getBcashRestUrl","sendBip70","getPostage","populateFormsFromPaymentDetails","_x","_populateFormsFromPaymentDetails","_callee2","paymentDetails","txInfo","postageObj","totalSats","slpScript","tokenIdBuf","tokenAddress","sendRecords","_formData$token3","difference","cashAddress","decodedAddress","totalBase","tokenInfo","tokenValue","_context2","Script","fromRaw","Buffer","from","outputs","getAddress","reduce","total","output","fromSmallestDenomination","isValidSlp","getData","getType","Number","toFixed","includes","cashaddr","decode","encode","hash","getRecords","Error","record","add","U64","fromBE","fromInt","fetch","then","res","json","toInt","handleSendXecError","errorObj","test","errorNotification","_send","_callee3","link","_merchantDataJson$cal","merchantDataJson","_context3","_objectSpread","defaultFee","sendTokenNotification","sendXecNotification","merchantData","parse","callback","success_url","window","location","replaceState","origin","totalBalance","_formData$token","fullQueryString","delimiterIndex","txInfoArr","prInfo","_delimiterIndex","param","encodedValue","queryString","url","Path1899","search","indexOf","slice","toLowerCase","decodeURIComponent","getUrlFromQueryString","getPaymentRequest","checkSufficientFunds","fiatPriceString","isNaN","formatFiatBalance","fiatCurrency","toUpperCase","fiatToCrypto","priceApiError","displayBalance","displayTicker","ipn_body","invoice","merchant_name","offer_description","offer_name","onOk","send","callbackUrl","href","replace","slpAddress","encodeURIComponent","CheckOutIcon","memo","validateStatus","help","placeholder","required","SecondaryButton","PrimaryButton","defaultProps","status"],"mappings":"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","file":"static/js/13.9ea5b7d4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LoadingCtn = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 400px;\r\n    flex-direction: column;\r\n\r\n    svg {\r\n        width: 50px;\r\n        height: 50px;\r\n        fill: ${props => props.theme.primary};\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 23px;\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderFiatWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const ZeroBalanceHeader = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const TokenParamLabel = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const AlertMsg = styled.p`\r\n    color: ${props => props.theme.forms.error} !important;\r\n`;\r\n\r\nexport const ConvertAmount = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport { CashLoader } from '@components/Common/CustomIcons';\r\nimport { AlertMsg } from '@components/Common/Atoms';\r\n\r\nconst ApiError = () => {\r\n    return (\r\n        <>\r\n            <AlertMsg>\r\n                <b>API connection lost.</b>\r\n                <br /> Re-establishing connection...\r\n            </AlertMsg>\r\n            <CashLoader />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApiError;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Modal } from 'antd';\r\nimport { ThemedQrcodeOutlined } from '@components/Common/CustomIcons';\r\nimport styled from 'styled-components';\r\nimport { BrowserQRCodeReader } from '@zxing/library';\r\nimport {\r\n    currency,\r\n    isValidCashPrefix,\r\n    isValidTokenPrefix,\r\n} from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\n\r\nconst StyledScanQRCode = styled.span`\r\n    display: block;\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n    width: 400px !important;\r\n    height: 400px !important;\r\n\r\n    .ant-modal-close {\r\n        top: 0 !important;\r\n        right: 0 !important;\r\n    }\r\n`;\r\n\r\nconst QRPreview = styled.video`\r\n    width: 100%;\r\n`;\r\n\r\nconst ScanQRCode = ({\r\n    loadWithCameraOpen,\r\n    onScan = () => null,\r\n    ...otherProps\r\n}) => {\r\n    const [visible, setVisible] = useState(loadWithCameraOpen);\r\n    const [error, setError] = useState(false);\r\n    // Use these states to debug video errors on mobile\r\n    // Note: iOS chrome/brave/firefox does not support accessing camera, will throw error\r\n    // iOS users can use safari\r\n    // todo only show scanner with safari\r\n    //const [mobileError, setMobileError] = useState(false);\r\n    //const [mobileErrorMsg, setMobileErrorMsg] = useState(false);\r\n    const [activeCodeReader, setActiveCodeReader] = useState(null);\r\n\r\n    const teardownCodeReader = codeReader => {\r\n        if (codeReader !== null) {\r\n            codeReader.reset();\r\n            codeReader.stop();\r\n            codeReader = null;\r\n            setActiveCodeReader(codeReader);\r\n        }\r\n    };\r\n\r\n    const parseContent = content => {\r\n        let type = 'unknown';\r\n        let values = {};\r\n\r\n        // If what scanner reads from QR code begins with 'bitcoincash:' or 'simpleledger:' or their successor prefixes\r\n        if (isValidCashPrefix(content) || isValidTokenPrefix(content)) {\r\n            type = 'address';\r\n            values = { address: content };\r\n            // Event(\"Category\", \"Action\", \"Label\")\r\n            // Track number of successful QR code scans\r\n            // BCH or slp?\r\n            let eventLabel = currency.ticker;\r\n            const isToken = content.split(currency.tokenPrefix).length > 1;\r\n            if (isToken) {\r\n                eventLabel = currency.tokenTicker;\r\n            }\r\n            Event('ScanQRCode.js', 'Address Scanned', eventLabel);\r\n        }\r\n        return { type, values };\r\n    };\r\n\r\n    const scanForQrCode = async () => {\r\n        const codeReader = new BrowserQRCodeReader();\r\n        setActiveCodeReader(codeReader);\r\n\r\n        try {\r\n            // Need to execute this before you can decode input\r\n            // eslint-disable-next-line no-unused-vars\r\n            const videoInputDevices = await codeReader.getVideoInputDevices();\r\n            //console.log(`videoInputDevices`, videoInputDevices);\r\n            //setMobileError(JSON.stringify(videoInputDevices));\r\n\r\n            // choose your media device (webcam, frontal camera, back camera, etc.)\r\n            // TODO implement if necessary\r\n            //const selectedDeviceId = videoInputDevices[0].deviceId;\r\n\r\n            //const previewElem = document.querySelector(\"#test-area-qr-code-webcam\");\r\n\r\n            const content = await codeReader.decodeFromInputVideoDevice(\r\n                undefined,\r\n                'test-area-qr-code-webcam',\r\n            );\r\n            const result = parseContent(content.text);\r\n\r\n            // stop scanning and fill form if it's an address\r\n            if (result.type === 'address') {\r\n                // Hide the scanner\r\n                setVisible(false);\r\n                onScan(result.values.address);\r\n                return teardownCodeReader(codeReader);\r\n            }\r\n        } catch (err) {\r\n            console.log(`Error in QR scanner:`);\r\n            console.log(err);\r\n            console.log(JSON.stringify(err.message));\r\n            //setMobileErrorMsg(JSON.stringify(err.message));\r\n            setError(err);\r\n            teardownCodeReader(codeReader);\r\n        }\r\n\r\n        // stop scanning after 20s no matter what\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!visible) {\r\n            setError(false);\r\n            // Stop the camera if user closes modal\r\n            if (activeCodeReader !== null) {\r\n                teardownCodeReader(activeCodeReader);\r\n            }\r\n        } else {\r\n            scanForQrCode();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [visible]);\r\n\r\n    return (\r\n        <>\r\n            <StyledScanQRCode\r\n                {...otherProps}\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <ThemedQrcodeOutlined />\r\n            </StyledScanQRCode>\r\n            <StyledModal\r\n                title=\"Scan QR code\"\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                footer={null}\r\n            >\r\n                {visible ? (\r\n                    <div>\r\n                        {error ? (\r\n                            <>\r\n                                <Alert\r\n                                    message=\"Error\"\r\n                                    description=\"Error in QR scanner. Please ensure your camera is not in use. Due to Apple restrictions on third-party browsers, you must use Safari browser for QR code scanning on an iPhone.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                    style={{ textAlign: 'left' }}\r\n                                />\r\n                                {/*\r\n                <p>{mobileError}</p>\r\n                <p>{mobileErrorMsg}</p>\r\n                */}\r\n                            </>\r\n                        ) : (\r\n                            <QRPreview id=\"test-area-qr-code-webcam\"></QRPreview>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n            </StyledModal>\r\n        </>\r\n    );\r\n};\r\n\r\nScanQRCode.propTypes = {\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    onScan: PropTypes.func,\r\n};\r\n\r\nexport default ScanQRCode;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select } from 'antd';\r\nconst { TextArea } = Input;\r\nimport {\r\n    ThemedDollarOutlined,\r\n    ThemedWalletOutlined,\r\n    ThemedLockOutlined\r\n} from '@components/Common/CustomIcons';\r\nimport styled, { css } from 'styled-components';\r\nimport ScanQRCode from './ScanQRCode';\r\nimport useBCH from '@hooks/useBCH';\r\nimport { currency } from '@components/Common/Ticker.js';\r\nimport { authPubKeys } from '@utils/selfMint';\r\n\r\nexport const AntdFormCss = css`\r\n    .ant-input-group-addon {\r\n        background-color: ${props =>\r\n            props.theme.forms.addonBackground} !important;\r\n        border: 1px solid ${props => props.theme.forms.border};\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    input.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n    }\r\n    textarea.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n        min-height: 100px;\r\n    }\r\n    .ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-select-selector {\r\n        height: 60px !important;\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-form-item-has-error\r\n        > div\r\n        > div.ant-form-item-control-input\r\n        > div\r\n        > span\r\n        > span\r\n        > span.ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error .ant-input,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper,\r\n    .ant-form-item-has-error .ant-input:hover,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper:hover {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error\r\n        .ant-select:not(.ant-select-disabled):not(.ant-select-customize-input)\r\n        .ant-select-selector {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-select-single .ant-select-selector .ant-select-selection-item,\r\n    .ant-select-single .ant-select-selector .ant-select-selection-placeholder {\r\n        line-height: 60px;\r\n        text-align: left;\r\n        color: ${props => props.theme.forms.text};\r\n        font-weight: bold;\r\n    }\r\n    .ant-form-item-has-error .ant-input-group-addon {\r\n        color: ${props => props.theme.forms.error} !important;\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-form-item-explain.ant-form-item-explain-error {\r\n        color: ${props => props.theme.forms.error} !important;\r\n    }\r\n`;\r\n\r\nexport const AntdFormWrapper = styled.div`\r\n    ${AntdFormCss}\r\n`;\r\n\r\nexport const InputAddonText = styled.span`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const InputNumberAddonText = styled.span`\r\n    background-color: ${props => props.theme.forms.addonBackground} !important;\r\n    border: 1px solid ${props => props.theme.forms.border};\r\n    color: ${props => props.theme.forms.addonForeground} !important;\r\n    height: 50px;\r\n    line-height: 47px;\r\n\r\n    * {\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const SendBchInput = ({\r\n    onMax,\r\n    inputProps,\r\n    selectProps,\r\n    activeFiatCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: currency.ticker,\r\n            label: currency.ticker,\r\n        },\r\n        {\r\n            value: activeFiatCode ? activeFiatCode : 'USD',\r\n            label: activeFiatCode ? activeFiatCode : 'USD',\r\n        },\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            defaultValue={currency.ticker}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : (\r\n                                <img\r\n                                    src={currency.logo}\r\n                                    alt=\"\"\r\n                                    width={16}\r\n                                    height={16}\r\n                                />\r\n                            )\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                    <InputNumberAddonText\r\n                        style={{\r\n                            width: '10%',\r\n                            height: '60px',\r\n                            lineHeight: '60px',\r\n                        }}\r\n                        disabled={!!(inputProps || {}).disabled}\r\n                        onClick={!(inputProps || {}).disabled && onMax}\r\n                    >\r\n                        max\r\n                    </InputNumberAddonText>\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBchInput.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeFiatCode: PropTypes.string,\r\n};\r\n\r\nexport const SendBip70Input = ({\r\n    inputProps,\r\n    selectProps,\r\n    activeTokenCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: activeTokenCode,\r\n            label: activeTokenCode,\r\n        }\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            value={activeTokenCode}\r\n            readOnly={true}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n\r\n    const prefixImage = inputProps.token ? (\r\n        <div\r\n            style={{\r\n                height: '16px',\r\n                width: '16px'\r\n            }}\r\n        ></div>\r\n    ) : (\r\n        <img\r\n            src={currency.logo}\r\n            alt=\"\"\r\n            width={16}\r\n            height={16}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        readOnly={true}\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : prefixImage\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBip70Input.propTypes = {\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeTokenCode: PropTypes.string,\r\n};\r\n\r\nexport const FormItemWithMaxAddon = ({ onMax, inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    type=\"number\"\r\n                    prefix={\r\n                        <img\r\n                            src={currency.logo}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    addonAfter={\r\n                        <InputAddonText\r\n                            disabled={!!(inputProps || {}).disabled}\r\n                            onClick={!(inputProps || {}).disabled && onMax}\r\n                        >\r\n                            max\r\n                        </InputAddonText>\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nFormItemWithMaxAddon.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\n// loadWithCameraOpen prop: if true, load page with camera scanning open\r\nexport const DestinationAddressSingle = ({\r\n    onScan,\r\n    loadWithCameraOpen,\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    addonAfter={\r\n                        <ScanQRCode\r\n                            loadWithCameraOpen={loadWithCameraOpen}\r\n                            onScan={onScan}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const DestinationAddressMulti = ({ inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <TextArea\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressMulti.propTypes = {\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const Bip70AddressSingle = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    readOnly={true}\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nBip70AddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const SelfMintAuthCode = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedLockOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintAuthCode.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const SelfMintPurchaseAmount = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    const logoUrl = authPubKeys[0].imageUrl;\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    style={{ width: '60%', textAlign: 'left' }}\r\n                    type=\"number\"\r\n                    step={0.01}\r\n                    precision={2}\r\n                    prefix={\r\n                        <img\r\n                            src={logoUrl}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintPurchaseAmount.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const CurrencySelectDropdown = selectProps => {\r\n    const { Option } = Select;\r\n\r\n    // Build select dropdown from currency.fiatCurrencies\r\n    const currencyMenuOptions = [];\r\n    const currencyKeys = Object.keys(currency.fiatCurrencies);\r\n    for (let i = 0; i < currencyKeys.length; i += 1) {\r\n        const currencyMenuOption = {};\r\n        currencyMenuOption.value =\r\n            currency.fiatCurrencies[currencyKeys[i]].slug;\r\n        currencyMenuOption.label = `${\r\n            currency.fiatCurrencies[currencyKeys[i]].name\r\n        } (${currency.fiatCurrencies[currencyKeys[i]].symbol})`;\r\n        currencyMenuOptions.push(currencyMenuOption);\r\n    }\r\n    const currencyOptions = currencyMenuOptions.map(currencyMenuOption => {\r\n        return (\r\n            <Option\r\n                key={currencyMenuOption.value}\r\n                value={currencyMenuOption.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currencyMenuOption.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            className=\"select-after\"\r\n            style={{\r\n                width: '100%',\r\n            }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n};\r\n\r\n// export const AddressValidators = () => {\r\n//     const { BCH } = useBCH();\r\n\r\n//     return {\r\n//         safelyDetectAddressFormat: value => {\r\n//             try {\r\n//                 return BCH.Address.detectAddressFormat(value);\r\n//             } catch (error) {\r\n//                 return null;\r\n//             }\r\n//         },\r\n//         isSLPAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'slpaddr',\r\n//         isBCHAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'cashaddr',\r\n//         isLegacyAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'legacy',\r\n//     }();\r\n// };\r\n","export default __webpack_public_path__ + \"static/media/checkout_icon.bd1106d2.svg\";","import styled from \"styled-components\";\r\n\r\nexport const CheckoutHeader = styled.div`\r\n\tdisplay: flex;\r\n\tmargin: 0 auto 1rem;\r\n\tflex-direction: column;\r\n\th4 {\r\n\t\tfont-size: 1rem;\r\n\t\tline-height: 1.5;\r\n\t\ttext-align: center;\r\n\r\n\t\tcolor: #8a8a8a;\r\n\t}\r\n\thr {\r\n\t\tdisplay: inline-flex;\r\n\t\theight: 1px;\r\n\t\twidth: 3rem;\r\n\t\tborder: 0;\r\n\t\tbackground: rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\th1 {\r\n\t\tfont-size: 1.5rem;\r\n\t\tline-height: 1.5;\r\n\t\tfont-weight: 800;\r\n\t\ttext-align: center;\r\n\r\n\t\tcolor: #000000;\r\n\t}\r\n`;\r\n\r\nexport const CheckoutStyles = styled.div`\r\n\ttext-align: left;\r\n\tletter-spacing: -0.01em;\r\n`;\r\nexport const PaymentDetails = styled.div`\r\n\tdisplay: flex;\r\n\tmargin: 0 auto;\r\n\tflex-direction: column;\r\n\ttext-align: left;\r\n\t.title {\r\n\t\tfont-weight: 600;\r\n\t\tfont-size: 1rem;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t\tline-height: 1.25;\r\n\r\n\t\tcolor: #8a8a8a;\r\n\t}\r\n\r\n\t.offer-description {\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 1rem;\r\n\t\tline-height: 1.25;\r\n\t\tmin-height: 2.5rem;\r\n\t\tmargin: 0 0 0rem;\r\n\r\n\t\tcolor: #000000;\r\n\t}\r\n\r\n\t.merchant {\r\n\t\tdisplay: block;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 0.875rem;\r\n\t\tline-height: 1.25;\r\n\r\n\t\tcolor: #000000;\r\n\t}\r\n`;\r\nexport const PurchaseAuthCode = styled.div`\r\n\tdisplay: flex;\r\n\tmargin: 0 auto;\r\n\tflex-direction: column;\r\n\r\n\ttext-align: left;\r\n\t.text-muted {\r\n\t\tdisplay: block;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 0.875rem;\r\n\t\tline-height: 1.25;\r\n\t\tmargin-bottom: 0;\r\n\r\n\t\tcolor: #8a8a8a;\r\n\t}\r\n\r\n\t.text-muted-small {\r\n\t\tdisplay: block;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 0.7rem;\r\n\t\tline-height: 1.25;\r\n\t\tmargin-bottom: 0;\r\n\r\n\t\tcolor: #8a8a8a;\r\n\t}\r\n\r\n\t.text-red {\r\n\t\tdisplay: block;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 0.875rem;\r\n\t\tline-height: 1.25;\r\n\t\tmargin-bottom: 0;\r\n\r\n\t\tcolor: red;\r\n\t}\r\n`;\r\n\r\nexport const Heading = styled.h3`\r\n\tfont-weight: 600;\r\n\tfont-size: 1.125rem;\r\n\tmargin-bottom: 0.75rem;\r\n\tline-height: 1.25;\r\n\r\n\tcolor: #000;\r\n`;\r\nexport const ListItem = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin: 0.75rem auto;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\t&.min-m {\r\n\t\tmargin: 0.25rem auto;\r\n\t}\r\n\t.bold {\r\n\t\tfont-weight: 800;\r\n\t}\r\n\t.gray {\r\n\t\tcolor: #8a8a8a;\r\n\t}\r\n\t.black {\r\n\t\tcolor: #000;\r\n\t}\r\n\r\n\t.key,\r\n\t.value {\r\n\t\tfont-size: 1rem;\r\n\t\tline-height: 1.25;\r\n\t}\r\n\r\n\t.value {\r\n\t\ttext-align: right;\r\n\t}\r\n`;\r\n\r\nexport const CheckoutIcon = styled.img`\r\n\twidth: 2rem;\r\n\tdisplay: block;\r\n\tmargin: 0 auto 0.5rem;\r\n`;\r\n\r\nexport const HorizontalSpacer = styled.hr`\r\n\tdisplay: block;\r\n\theight: 1px;\r\n\twidth: 100%;\r\n\tborder: 0;\r\n\tmargin: 0.6rem 0;\r\n\tbackground: rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const AgreeOverlay = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbackground: rgba(0, 0, 0, 0.5);\r\n\ttransition: opacity 200ms;\r\n\tz-index: 3000;\r\n`;\r\n\r\nexport const AgreeModal = styled.div`\r\n\tmargin: 30px auto;\r\n\tpadding: 20px;\r\n\tbackground: #fff;\r\n\tborder: 1px solid #666;\r\n\twidth: 80%;\r\n\tborder-radius: 6px;\r\n\tbox-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\r\n\tposition: relative;\r\n\r\n\tp {\r\n\t\tcolor: #8a8a8a;\r\n\t\ttext-align: justify;\r\n  \t\ttext-justify: inter-word;\r\n\t}\r\n\r\n\t.first {\r\n\t\tmargin-top: 1em;\r\n\t}\r\n\r\n\t.key,\r\n\t.value {\r\n\t\tfont-size: 1rem;\r\n\t\tline-height: 1.25;\r\n\t}\r\n\t.black {\r\n\t\tcolor: #000;\r\n\t}\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    useHistory\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WalletContext } from '@utils/context';\r\nimport { Bip70AddressSingle } from '@components/Common/EnhancedInputs';\r\nimport {\r\n    Form,\r\n    Modal\r\n} from 'antd';\r\nimport PrimaryButton, {\r\n    SecondaryButton,\r\n} from '@components/Common/PrimaryButton';\r\nimport useBCH from '@hooks/useBCH';\r\nimport {\r\n    sendXecNotification,\r\n    sendTokenNotification,\r\n    errorNotification,\r\n} from '@components/Common/Notifications';\r\nimport {\r\n    currency\r\n} from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\nimport {\r\n    fiatToCrypto,\r\n    shouldRejectAmountInput,\r\n} from '@utils/validation';\r\nimport {\r\n    ConvertAmount,\r\n    AlertMsg,\r\n} from '@components/Common/Atoms';\r\nimport { \r\n    getWalletState,\r\n    fromSmallestDenomination\r\n} from '@utils/cashMethods';\r\nimport ApiError from '@components/Common/ApiError';\r\nimport { formatFiatBalance } from '@utils/validation';\r\nimport styled from 'styled-components';\r\nimport cashaddr from 'ecashaddrjs';\r\nimport { getUrlFromQueryString } from '@utils/bip70';\r\nimport { getPaymentRequest } from '../../utils/bip70';\r\nimport { \r\n    Script,\r\n    script\r\n} from 'bcash';\r\nconst { SLP } = script;\r\nimport { U64 } from 'n64';\r\nimport CheckOutIcon from \"@assets/checkout_icon.svg\";\r\nimport {\r\n\tCheckoutHeader,\r\n\tCheckoutStyles,\r\n\tPaymentDetails,\r\n\tPurchaseAuthCode,\r\n\tHeading,\r\n\tListItem,\r\n\tCheckoutIcon,\r\n\tHorizontalSpacer,\r\n} from \"../../assets/styles/checkout.styles\";\r\n\r\n\r\nconst SendBip70 = ({ passLoadingStatus }) => {\r\n    // use balance parameters from wallet.state object and not legacy balances parameter from walletState, if user has migrated wallet\r\n    // this handles edge case of user with old wallet who has not opened latest Cashtab version yet\r\n\r\n    // If the wallet object from ContextValue has a `state key`, then check which keys are in the wallet object\r\n    // Else set it as blank\r\n    const ContextValue = React.useContext(WalletContext);\r\n    const { wallet, fiatPrice, apiError, cashtabSettings } = ContextValue;\r\n    const walletState = getWalletState(wallet);\r\n    const { \r\n        tokens,\r\n        balances\r\n    } = walletState;\r\n    // Modal settings\r\n    const purchaseTokenIds = [\r\n        '52b12c03466936e7e3b2dcfcff847338c53c611ba8ab74dd8e4dadf7ded12cf6',\r\n        '4075459e0ac841f234bc73fc4fe46fe5490be4ed98bc8ca3f9b898443a5a381a'\r\n    ];\r\n\r\n    const blankFormData = {\r\n        dirty: true,\r\n        value: '',\r\n        address: '',\r\n    };\r\n\r\n    const [formData, setFormData] = useState(blankFormData);\r\n    let tokenFormattedBalance;\r\n    if (formData.token) {\r\n        const token = tokens.find(token => \r\n            token.tokenId === formData.token.tokenId\r\n        );\r\n        if (token) {\r\n            const tokenBalance = token.balance.toString();\r\n            tokenFormattedBalance = (tokenBalance / (10 ** token.info.decimals))\r\n                .toString();\r\n        } else {\r\n            tokenFormattedBalance = '0';\r\n        }\r\n    }\r\n    const [queryStringText, setQueryStringText] = useState(null);\r\n    const [sendBchAddressError, setSendBchAddressError] = useState(false);\r\n    const [sendBchAmountError, setSendBchAmountError] = useState(false);\r\n    const [selectedCurrency, setSelectedCurrency] = useState(currency.ticker);\r\n\r\n    // Support cashtab button from web pages\r\n    const [prInfoFromUrl, setPrInfoFromUrl] = useState(false);\r\n\r\n    // Show a confirmation modal on transactions created by populating form from web page button\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    // Show a purchase modal when BUX is requested and insufficient balance\r\n    const [isPurchaseModalVisible, setIsPurchaseModalVisible] = useState(false);\r\n    const [purchaseTokenAmount, setPurchaseTokenAmount] = useState(0);\r\n\r\n    // Postage Protocol Check (for BURN)\r\n    const [postageData, setPostageData] = useState(null);\r\n    const [usePostage, setUsePostage] = useState(false);\r\n\r\n    const prefixesArray = [\r\n        ...currency.prefixes,\r\n        ...currency.tokenPrefixes\r\n    ]\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        send();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handlePurchaseOk = () => {\r\n        setIsPurchaseModalVisible(false);\r\n        // Remove anchor hash from url\r\n        const callbackUrl = window.location.href.replace(\r\n            window.location.hash,\r\n            ''\r\n        );\r\n        return window.location.assign(\r\n            `https://bux.digital/?cbxamount=${purchaseTokenAmount.toString()}`\r\n            + `&cbxaddress=${wallet.Path1899.slpAddress}`\r\n            + `&cbxcallback=${encodeURIComponent(callbackUrl)}`\r\n            +`#payment`\r\n        )\r\n    };\r\n\r\n    const handlePurchaseCancel = () => {\r\n        setIsPurchaseModalVisible(false);\r\n    };\r\n\r\n    const sleep = (ms) => {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const { \r\n        getBcashRestUrl, \r\n        sendBip70,\r\n        getPostage \r\n    } = useBCH();\r\n\r\n    // If the balance has changed, unlock the UI\r\n    // This is redundant, if backend has refreshed in 1.75s timeout below, UI will already be unlocked\r\n    useEffect(() => {\r\n        passLoadingStatus(false);\r\n    }, [balances.totalBalance]);\r\n\r\n    useEffect(() => {\r\n        // Check to see if purchase modal should be shown\r\n        if (formData.token) {\r\n            const difference = (Number(tokenFormattedBalance) - Number(formData.value))\r\n                .toFixed(formData.token.decimals);\r\n            if (purchaseTokenIds.includes(formData.token?.tokenId)) {\r\n                if (difference < 0 && formData.address != '**BURN**') \r\n                    return history.push('/checkout');\r\n                // // Set purchase modal visible and set amount to purchase\r\n                // setIsPurchaseModalVisible(difference < 0);\r\n                // const purchaseAmount = difference < 0 ? Math.abs(difference) : 0\r\n                // setPurchaseTokenAmount(purchaseAmount);\r\n            }\r\n        }\r\n    }, [tokenFormattedBalance]);\r\n\r\n    useEffect(async () => {\r\n        if (!wallet.Path1899)\r\n            return history.push('/wallet');\r\n        passLoadingStatus(true);\r\n        // Manually parse for prInfo object on page load when SendBip70.js is loaded with a query string\r\n\r\n        // Do not set prInfo in state if query strings are not present\r\n        if (\r\n            !window.location ||\r\n            !window.location.hash ||\r\n            (window.location.search == '' && window.location.hash === '#/sendBip70')\r\n        ) {\r\n            passLoadingStatus(false);\r\n            return;\r\n        }\r\n\r\n        const fullQueryString = window.location.search == '' ? \r\n            window.location.hash : window.location.search;\r\n\r\n        const delimiterIndex = fullQueryString.indexOf('?');\r\n        const txInfoArr = fullQueryString\r\n            .slice(delimiterIndex+1)\r\n            .split('&');\r\n\r\n        // Iterate over this to create object\r\n        const prInfo = {};\r\n        for (let i = 0; i < txInfoArr.length; i += 1) {\r\n            const delimiterIndex = txInfoArr[i].indexOf('=');\r\n            const param = txInfoArr[i]\r\n                .slice(0, delimiterIndex)\r\n                .toLowerCase();\r\n            // Forward to selfMint if auth code is specified\r\n            if (param == 'mintauth') {\r\n                console.log('has mintauth')\r\n                return history.push('/selfMint');\r\n            }\r\n\r\n            const encodedValue = txInfoArr[i].slice(delimiterIndex+1);\r\n            const value = decodeURIComponent(encodedValue);\r\n            const prefix = value.split(':')[0];\r\n            if (param === 'uri' && prefixesArray.includes(prefix)) {\r\n                const queryString = value.split('?')[1];\r\n                const url = getUrlFromQueryString(queryString);\r\n                if (url) {\r\n                    prInfo.type = prefix.toLowerCase();\r\n                    prInfo.url = url;\r\n                }\r\n            }\r\n        }\r\n        console.log(`prInfo from page params`, prInfo);\r\n        if (prInfo.url && prInfo.type) {\r\n            try {\r\n                prInfo.paymentDetails = (await getPaymentRequest(\r\n                    prInfo.url, \r\n                    prInfo.type\r\n                )).paymentDetails;\r\n\t\t\t\tprInfo.paymentDetails.merchantDataJson = JSON.parse(prInfo.paymentDetails.merchantData.toString());\r\n            } catch (err) {\r\n                errorNotification(err, \r\n                    'Failed to fetch invoice. May be expired or invalid', \r\n                    `Fetching invoice: ${prInfo.url}`\r\n                );\r\n                // Sleep for 3 seconds and then \r\n                await sleep(3000);\r\n                // Manually disable loading\r\n                passLoadingStatus(false);\r\n                window.history.replaceState(null, '', window.location.origin);\r\n                return history.push(`/wallet`);\r\n            }\r\n        }\r\n        setPrInfoFromUrl(prInfo);\r\n        prInfo.paymentDetails.type = prInfo.type;\r\n        // const merchantDataJson = JSON.parse(prInfo.paymentDetails.merchantData?.toString());\r\n        // console.log(\"merchantDataJson\", merchantDataJson);\r\n        await populateFormsFromPaymentDetails(prInfo.paymentDetails);\r\n\r\n        passLoadingStatus(false);\r\n    }, []);\r\n\r\n    async function populateFormsFromPaymentDetails(paymentDetails) {\r\n        if (!paymentDetails)\r\n            return;\r\n        const txInfo = {};\r\n        // Define postage object in case of BURN\r\n        let postageObj;\r\n        // Begin parsing BIP70 Payment Request\r\n        if (paymentDetails.type === 'ecash') {\r\n            const address = Script.fromRaw(\r\n                Buffer.from(paymentDetails.outputs[0].script)\r\n            ).getAddress().toString();\r\n            const totalSats = paymentDetails.outputs.reduce((total, output) => {\r\n                return total + output.value\r\n            }, 0);\r\n            txInfo.address = address;\r\n            txInfo.value = fromSmallestDenomination(totalSats);\r\n\r\n        } else if (paymentDetails.type === 'etoken') {\r\n            const slpScript = SLP.fromRaw(Buffer.from(\r\n                paymentDetails.outputs[0].script\r\n            ));\r\n            // Be sure it is valid SLP transaction\r\n            if (slpScript.isValidSlp()) {\r\n                const tokenIdBuf = slpScript.getData(4);\r\n                // Handle SEND and BURN\r\n                let tokenAddress;\r\n                let sendRecords;\r\n                if (slpScript.getType() === 'SEND') {\r\n                    // Check to see if should be forwarded to checkout/purchase\r\n                    if (formData.token) {\r\n                        const difference = (Number(tokenFormattedBalance) - Number(formData.value))\r\n                            .toFixed(formData.token.decimals);\r\n                        if (purchaseTokenIds.includes(formData.token?.tokenId)) {\r\n                            if (difference < 0) \r\n                                return history.push('/checkout');\r\n                        }\r\n                    }\r\n                    // Fill in values\r\n                    const cashAddress = Script.fromRaw(\r\n                        Buffer.from(paymentDetails.outputs[1].script)\r\n                    ).getAddress().toString();\r\n                    const decodedAddress = cashaddr.decode(cashAddress);\r\n                    tokenAddress = cashaddr.encode(\r\n                        'etoken',\r\n                        decodedAddress.type,\r\n                        decodedAddress.hash\r\n                    )\r\n                    sendRecords = slpScript.getRecords(tokenIdBuf);\r\n                } else if (slpScript.getType() === 'BURN') {\r\n                    tokenAddress = '**BURN**'\r\n                    sendRecords = [{\r\n                        value: slpScript.getData(5)\r\n                    }]\r\n                    // Get postage info\r\n                    postageObj = await getPostage(\r\n                        tokenIdBuf.toString('hex')\r\n                    );\r\n                } else {\r\n                    throw new Error(\r\n                        `Unsupported SLP transaction type: ${slpScript.getType()}`\r\n                    );\r\n                }\r\n                // Compute total amount to send\r\n                const totalBase = sendRecords.reduce((total, record) => {\r\n                    return total.add(U64.fromBE(Buffer.from(record.value)));\r\n                }, U64.fromInt(0));\r\n                console.log('totalBase', totalBase);\r\n\r\n                const tokenInfo = await fetch(\r\n                    `${getBcashRestUrl()}/token/${tokenIdBuf.toString('hex')}`\r\n                ).then(res => res.json());\r\n\r\n                txInfo.address = tokenAddress;\r\n                const tokenValue = totalBase.toInt() / (10 ** tokenInfo.decimals);\r\n                txInfo.value = `${tokenValue}`;\r\n                txInfo.token = tokenInfo;\r\n            }\r\n        }\r\n        \r\n        setFormData(txInfo);\r\n        if (postageObj) {\r\n            setPostageData(postageObj);\r\n            setUsePostage(true);\r\n        }\r\n    }\r\n\r\n    function handleSendXecError(errorObj, ticker) {\r\n        // Set loading to false here as well, as balance may not change depending on where error occured in try loop\r\n        passLoadingStatus(false);\r\n        let message;\r\n\r\n        if (!errorObj.error && !errorObj.message) {\r\n            message = `Transaction failed: no response from ${getBcashRestUrl()}.`;\r\n        } else if (\r\n            /Could not communicate with full node or other external service/.test(\r\n                errorObj.error,\r\n            )\r\n        ) {\r\n            message = 'Could not communicate with API. Please try again.';\r\n        } else if (\r\n            errorObj.error &&\r\n            errorObj.error.includes(\r\n                'too-long-mempool-chain, too many unconfirmed ancestors [limit: 50] (code 64)',\r\n            )\r\n        ) {\r\n            message = `The ${currency.ticker} you are trying to send has too many unconfirmed ancestors to send (limit 50). Sending will be possible after a block confirmation. Try again in about 10 minutes.`;\r\n        } else {\r\n            message =\r\n                errorObj.message || errorObj.error || JSON.stringify(errorObj);\r\n        }\r\n\r\n        errorNotification(errorObj, message, `Sending ${ticker}`);\r\n\r\n    }\r\n\r\n    async function send() {\r\n        setFormData({\r\n            ...formData,\r\n            dirty: false,\r\n        });\r\n\r\n        const { paymentDetails, type } = prInfoFromUrl;\r\n\r\n        // ensure prInfo exists\r\n        if (!paymentDetails) {\r\n            return;\r\n        }\r\n\r\n        // Event(\"Category\", \"Action\", \"Label\")\r\n        // Track number of XEC BIP70 transactions\r\n        Event('SendBip70.js', 'SendBip70', type);\r\n\r\n        passLoadingStatus(true);\r\n\r\n        try {\r\n            // Send transaction\r\n            const link = await sendBip70(\r\n                wallet,\r\n                paymentDetails,\r\n                currency.defaultFee,\r\n                false // testOnly\r\n            );\r\n            if (type == 'ecash')\r\n                sendTokenNotification(link);\r\n            else {\r\n                sendXecNotification(link);\r\n            }\r\n            \r\n            // Send to success page if included in merchantDetails\r\n            if (paymentDetails.merchantData) {\r\n                const merchantDataJson = JSON.parse(paymentDetails.merchantData.toString());\r\n                if (merchantDataJson.callback?.success_url) {\r\n                    return window.location.assign(merchantDataJson.callback.success_url);\r\n                }\r\n            }\r\n            \r\n            // Sleep for 3 seconds and then \r\n            await sleep(3000);\r\n            // Manually disable loading\r\n            passLoadingStatus(false);\r\n            // Return to main wallet screen\r\n            window.history.replaceState(null, '', window.location.origin);\r\n            return history.push(`/wallet`);\r\n        } catch (e) {\r\n            const ticker = type == 'etoken' ?\r\n                currency.tokenTicker : currency.ticker;\r\n            handleSendXecError(e, ticker);\r\n        }\r\n        \r\n        // Clear the address field\r\n        setFormData(blankFormData);\r\n        // Manually disable loading\r\n        passLoadingStatus(false);\r\n    }\r\n\r\n    const handleSelectedCurrencyChange = e => {\r\n        setSelectedCurrency(e);\r\n        // Clear input field to prevent accidentally sending 1 BCH instead of 1 USD\r\n        setFormData(p => ({\r\n            ...p,\r\n            value: '',\r\n        }));\r\n    };\r\n\r\n    const handleBchAmountChange = e => {\r\n        const { value, name } = e.target;\r\n        let bchValue = value;\r\n        const error = shouldRejectAmountInput(\r\n            bchValue,\r\n            selectedCurrency,\r\n            fiatPrice,\r\n            balances.totalBalance,\r\n        );\r\n        setSendBchAmountError(error);\r\n\r\n        setFormData(p => ({\r\n            ...p,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const checkSufficientFunds = () => {\r\n        if (formData.token) {\r\n            return Number(tokenFormattedBalance) >= Number(formData.value)\r\n        } else if (formData) {\r\n            return Number(balances.totalBalance) > Number(formData.value)\r\n        }\r\n        return false\r\n    }\r\n\r\n    // Display price in USD below input field for send amount, if it can be calculated\r\n    let fiatPriceString = '';\r\n    if (fiatPrice !== null && !isNaN(formData.value)) {\r\n        if (selectedCurrency === currency.ticker) {\r\n            // calculate conversion to fiatPrice\r\n            fiatPriceString = `${(fiatPrice * Number(formData.value)).toFixed(\r\n                2,\r\n            )}`;\r\n\r\n            // formats to fiat locale style\r\n            fiatPriceString = formatFiatBalance(Number(fiatPriceString));\r\n\r\n            // insert symbol and currency before/after the locale formatted fiat balance\r\n            fiatPriceString = `${\r\n                cashtabSettings\r\n                    ? `${\r\n                          currency.fiatCurrencies[cashtabSettings.fiatCurrency]\r\n                              .symbol\r\n                      } `\r\n                    : '$ '\r\n            } ${fiatPriceString} ${\r\n                cashtabSettings && cashtabSettings.fiatCurrency\r\n                    ? cashtabSettings.fiatCurrency.toUpperCase()\r\n                    : 'USD'\r\n            }`;\r\n        } else {\r\n            fiatPriceString = `${\r\n                formData.value\r\n                    ? formatFiatBalance(\r\n                          Number(fiatToCrypto(formData.value, fiatPrice)),\r\n                      )\r\n                    : formatFiatBalance(0)\r\n            } ${currency.ticker}`;\r\n        }\r\n    }\r\n\r\n    const priceApiError = fiatPrice === null && selectedCurrency !== 'XEC';\r\n\r\n    const displayBalance = tokenFormattedBalance || balances.totalBalance;\r\n    const displayTicker = formData.token?.ticker || currency.ticker;\r\n\r\n\tconst { invoice, merchant_name, offer_description, offer_name } =\r\n\t\tprInfoFromUrl.paymentDetails?.merchantDataJson?.ipn_body || {};\r\n            \r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Confirm Send\"\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <p>\r\n                    Are you sure you want to send {formData.value}{' '}\r\n                    {displayTicker} to settle this payment request?\r\n                </p>\r\n            </Modal>\r\n            <Modal\r\n                title={`Purchase ${displayTicker}`}\r\n                visible={isPurchaseModalVisible}\r\n                onOk={handlePurchaseOk}\r\n                onCancel={handlePurchaseCancel}\r\n            >\r\n                <p>\r\n                    You have insufficient funds. Do you want to purchase {' '}\r\n                    <strong>{purchaseTokenAmount}{' '}{displayTicker}{' '}</strong>\r\n                    in order to be able to settle this payment request?\r\n                </p>\r\n            </Modal>\r\n\r\n\t\t\t<CheckoutHeader>\r\n\t\t\t\t<CheckoutIcon src={CheckOutIcon} />\r\n\t\t\t\t<h4>CHECKOUT</h4>\r\n\t\t\t\t<hr />\r\n                {(offer_name && (\r\n                    <>\r\n\t\t\t\t        <h1>{offer_name}</h1>\r\n                    </>                    \r\n                ))}\r\n\t\t\t</CheckoutHeader>\r\n\r\n\t\t\t<CheckoutStyles>\r\n\t\t\t\t<PaymentDetails>\r\n\t\t\t\t\t<h3 className=\"title\">Payment Request Details:</h3>\r\n                    {(offer_description && (\r\n                        <>\r\n        \t\t\t\t\t<p className=\"offer-description\">{offer_description}</p>\r\n\t\t        \t\t\t<span className=\"merchant\">From {merchant_name}</span>\r\n                        </>\r\n                    )) || (prInfoFromUrl && prInfoFromUrl.paymentDetails && (\r\n                        <>\r\n                            <p className=\"offer-description\">{prInfoFromUrl.paymentDetails.memo}</p>                                                \r\n                        </>\r\n                    ))}\r\n\t\t\t\t</PaymentDetails>\r\n\r\n\t\t\t\t<HorizontalSpacer />\r\n\r\n\t\t\t\t<PurchaseAuthCode>\r\n\t\t\t\t\t{!checkSufficientFunds() && <p className=\"text-muted\">You have insufficient funds in this wallet</p>}\r\n\t\t\t\t\t<ListItem className=\"min-m\">\r\n\t\t\t\t\t\t<span className=\"key black\">Ready To Send</span>\r\n\t\t\t\t\t\t<span className=\"value black bold\">\r\n\t\t\t\t\t\t\t{formData.value} {displayTicker}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<p className=\"text-muted\">In order to settle this payment request</p>\r\n\t\t\t\t</PurchaseAuthCode>\r\n\r\n\t\t\t\t<HorizontalSpacer />\r\n\r\n\t\t\t\t<PurchaseAuthCode>\r\n\t\t\t\t\t<ListItem className=\"min-m\">\r\n\t\t\t\t\t\t<span className=\"key black\">Balance</span>\r\n\t\t\t\t\t\t<div className=\"value\">\r\n\t\t\t\t\t\t\t<div className=\"black bold\">\r\n\t\t\t\t\t\t\t\t{displayBalance} {displayTicker}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</PurchaseAuthCode>\r\n\r\n\t\t\t\t<HorizontalSpacer />\r\n\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t{prInfoFromUrl && prInfoFromUrl.paymentDetails && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Bip70AddressSingle\r\n\t\t\t\t\t\t\t\tvalidateStatus={sendBchAddressError ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\thelp={sendBchAddressError ? sendBchAddressError : \"\"}\r\n\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\tplaceholder: `${currency.ticker} Address`,\r\n\t\t\t\t\t\t\t\t\tname: \"address\",\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tvalue: formData.address,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t></Bip70AddressSingle>\r\n\r\n\t\t\t\t\t\t\t{!formData.token && priceApiError && (\r\n\t\t\t\t\t\t\t\t<AlertMsg>\r\n\t\t\t\t\t\t\t\t\tError fetching fiat price. Setting send by{\" \"}\r\n\t\t\t\t\t\t\t\t\t{currency.fiatCurrencies[cashtabSettings.fiatCurrency].slug.toUpperCase()} disabled\r\n\t\t\t\t\t\t\t\t</AlertMsg>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{!formData.token && (\r\n\t\t\t\t\t\t\t\t<ConvertAmount>\r\n\t\t\t\t\t\t\t\t\t{fiatPriceString !== \"\" && \"=\"} {fiatPriceString}\r\n\t\t\t\t\t\t\t\t</ConvertAmount>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\r\n                    {merchant_name && (\r\n                        <>\r\n                            <ListItem>\r\n                                <span className=\"key gray\">Merchant:</span>\r\n                                <span className=\"value gray\">{merchant_name}</span>\r\n                            </ListItem>                        \r\n                        </>\r\n                    )}\r\n\r\n                    {invoice && (\r\n                        <>\r\n                            <ListItem>\r\n                                <span className=\"key gray\">Invoice:</span>\r\n                                <span className=\"value gray\">{invoice}</span>\r\n                            </ListItem>                        \r\n                        </>\r\n                    )}\r\n\r\n                    {(merchant_name || invoice) && (\r\n                        <>\r\n\t\t\t\t\t        <HorizontalSpacer />                        \r\n                        </>\r\n                    )}\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{!checkSufficientFunds() ||\r\n\t\t\t\t\t\tapiError ||\r\n\t\t\t\t\t\tsendBchAmountError ||\r\n\t\t\t\t\t\tsendBchAddressError ||\r\n\t\t\t\t\t\t!prInfoFromUrl ? (\r\n\t\t\t\t\t\t\t<SecondaryButton>Send</SecondaryButton>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<PrimaryButton onClick={() => showModal()}>Send</PrimaryButton>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{apiError && <ApiError />}\r\n\t\t\t\t</Form>\r\n\t\t\t</CheckoutStyles>\r\n        </>\r\n    );\r\n};\r\n\r\n/*\r\npassLoadingStatus must receive a default prop that is a function\r\nin order to pass the rendering unit test in SendBip70.test.js\r\n\r\nstatus => {console.log(status)} is an arbitrary stub function\r\n*/\r\n\r\nSendBip70.defaultProps = {\r\n    passLoadingStatus: status => {\r\n        console.log(status);\r\n    },\r\n};\r\n\r\nSendBip70.propTypes = {\r\n    passLoadingStatus: PropTypes.func,\r\n};\r\n\r\nexport default SendBip70;\r\n"],"sourceRoot":""}