{"version":3,"sources":["components/Common/Atoms.js","components/Common/ApiError.js","components/Common/ScanQRCode.js","components/Common/EnhancedInputs.js","components/Common/BalanceHeader.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","components/Send/SelfMint.js"],"names":["LoadingCtn","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","primary","BalanceHeaderWrap","_templateObject2","wallet","text","BalanceHeaderFiatWrap","_templateObject3","secondary","ZeroBalanceHeader","_templateObject4","TokenParamLabel","span","_templateObject5","AlertMsg","p","_templateObject6","forms","error","ConvertAmount","_templateObject7","ApiError","React","CashLoader","StyledScanQRCode","StyledModal","Modal","QRPreview","video","ScanQRCode","_ref","loadWithCameraOpen","_ref$onScan","onScan","otherProps","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","setError","_useState5","_useState6","activeCodeReader","setActiveCodeReader","teardownCodeReader","codeReader","reset","stop","parseContent","content","type","values","isValidCashPrefix","isValidTokenPrefix","address","eventLabel","currency","ticker","split","tokenPrefix","length","tokenTicker","Event","scanForQrCode","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","BrowserQRCodeReader","getVideoInputDevices","sent","decodeFromInputVideoDevice","undefined","abrupt","t0","console","log","JSON","stringify","message","apply","arguments","useEffect","createElement","Fragment","Object","assign","onClick","ThemedQrcodeOutlined","title","onCancel","footer","Alert","description","showIcon","style","textAlign","id","TextArea","Input","AntdFormCss","css","addonBackground","border","addonForeground","selectionBackground","borders","color","AntdFormWrapper","InputAddonText","disabled","InputNumberAddonText","SendBchInput","onMax","inputProps","selectProps","activeFiatCode","Option","Select","currencyOptions","value","label","map","key","className","CurrencySelect","defaultValue","width","Form","Item","Group","compact","step","dollar","Math","pow","cashDecimals","prefix","ThemedDollarOutlined","src","logo","alt","height","lineHeight","FormItemWithMaxAddon","_ref3","_excluded3","addonAfter","DestinationAddressSingle","_ref4","_excluded4","ThemedWalletOutlined","autoComplete","DestinationAddressMulti","_ref5","_excluded5","Bip70AddressSingle","_ref6","_excluded6","readOnly","SelfMintAuthCode","_ref7","_excluded7","ThemedLockOutlined","SelfMintPurchaseAmount","_ref8","_excluded8","logoUrl","authPubKeys","imageUrl","precision","CurrencySelectDropdown","currencyMenuOptions","currencyKeys","keys","fiatCurrencies","i","currencyMenuOption","slug","concat","name","symbol","push","BalanceHeader","balance","StyledSpacer","SelfMint","_formData$token","passLoadingStatus","ContextValue","useContext","WalletContext","apiError","walletState","getWalletState","tokens","balances","blankFormData","dirty","formData","setFormData","token","find","tokenId","tokenBalance","toString","U64","fromString","divn","info","decimals","authCodeB64","setAuthCodeB64","tokenToMint","setTokenToMint","_useState7","_useState8","isPurchaseModalVisible","setIsPurchaseModalVisible","_useState9","_useState10","purchaseTokenAmount","setPurchaseTokenAmount","sleep","ms","Promise","resolve","setTimeout","history","useHistory","_useBCH","useBCH","getBcashRestUrl","sendSelfMint","sendSelfMintV2","readAuthCode","getTxBcash","getTxHistoryBcash","getUtxoBcash","processAuthCode","_x","_processAuthCode","_callee4","authCode","_readAuthCode","mintQuantity","stampOutpoint","batonUtxo","version","outpointTocheck","stampUtxo","genesisTx","stampTxs","mintQtyString","_context4","txid","index","removeMintAuthParam","handleSendXecError","Error","tx","authObj","_tx$slpToken","slpToken","fromBE","toInt","_objectSpread","errorObj","test","includes","errorNotification","String","prototype","replaceAll","strReplace","strWith","esc","replace","reg","RegExp","this","searchMask","locationStr","window","location","href","replaceState","_send","_callee5","_readAuthCode2","_context5","Buffer","from","selfMintTokenNotification","totalBalance","fullQueryString","delimiterIndex","txInfoArr","_delimiterIndex","param","encodedValue","Path1899","hash","search","indexOf","slice","toLowerCase","decodeURIComponent","handleAuthCodeChange","_callee2","e","_context2","target","_x2","handlePurchaseAmountChange","_callee3","_context3","Number","toFixed","_x3","displayTicker","onOk","callbackUrl","slpAddress","encodeURIComponent","Row","Col","placeholder","required","onChange","paddingTop","PrimaryButton","send","SecondaryButton","defaultProps","status"],"mappings":"yXAEaA,EAAaC,IAAOC,IAAGC,MAAAC,YAAA,8OAWpB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAO,IAI/BC,EAAoBP,IAAOC,IAAGO,MAAAL,YAAA,6JAC9B,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,KAAKJ,OAAO,IASxCK,EAAwBX,IAAOC,IAAGW,MAAAT,YAAA,uLAClC,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,KAAKG,SAAS,IAU1CC,EAAoBd,IAAOC,IAAGc,MAAAZ,YAAA,4FAC9B,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,KAAKJ,OAAO,IAMxCU,EAAkBhB,IAAOiB,KAAIC,MAAAf,YAAA,kCAI7BgB,EAAWnB,IAAOoB,EAACC,MAAAlB,YAAA,sCACnB,SAAAC,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAGhCC,EAAgBxB,IAAOC,IAAGwB,MAAAtB,YAAA,uLAC1B,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,KAAKG,SAAS,G,mCCtDvD,4BAgBea,IAZE,WACb,OACIC,2BAAA,KACIA,gBAACR,IAAQ,KACLQ,gBAAA,SAAG,wBACHA,gBAAA,WAAM,kCAEVA,gBAACC,IAAU,MAGvB,C,shBCDMC,EAAmB7B,IAAOiB,KAAIf,MAAAC,YAAA,+BAI9B2B,EAAc9B,YAAO+B,IAAP/B,CAAaQ,MAAAL,YAAA,kKAU3B6B,EAAYhC,IAAOiC,MAAKrB,MAAAT,YAAA,4BAqJf+B,EAjJI,SAAHC,GAIT,IAHHC,EAAkBD,EAAlBC,mBAAkBC,EAAAF,EAClBG,cAAM,IAAAD,EAAG,kBAAM,IAAI,EAAAA,EAChBE,EAAUC,YAAAL,EAAAM,GAEbC,EAA8BC,mBAASP,GAAmBQ,EAAAC,YAAAH,EAAA,GAAnDI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAlCzB,EAAK0B,EAAA,GAAEC,EAAQD,EAAA,GAOtBE,EAAgDR,mBAAS,MAAKS,EAAAP,YAAAM,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAEtCG,EAAqB,SAAAC,GACJ,OAAfA,IACAA,EAAWC,QACXD,EAAWE,OAEXJ,EADAE,EAAa,MAGrB,EAEMG,EAAe,SAAAC,GACjB,IAAIC,EAAO,UACPC,EAAS,CAAC,EAGd,GAAIC,YAAkBH,IAAYI,YAAmBJ,GAAU,CAC3DC,EAAO,UACPC,EAAS,CAAEG,QAASL,GAIpB,IAAIM,EAAaC,IAASC,OACVR,EAAQS,MAAMF,IAASG,aAAaC,OAAS,IAEzDL,EAAaC,IAASK,aAE1BC,YAAM,gBAAiB,kBAAmBP,EAC9C,CACA,MAAO,CAAEL,OAAMC,SACnB,EAEMY,EAAa,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAvB,EAAAI,EAAAoB,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAD1B5B,EAAa,IAAI6B,sBACvB/B,EAAoBE,GAAY0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKI5B,EAAW8B,uBAAuB,KAAD,EAA1C,OAAAJ,EAAAK,KAAAL,EAAAE,KAAA,EAUD5B,EAAWgC,gCAC7BC,EACA,4BACF,KAAD,EAGD,GANM7B,EAAOsB,EAAAK,KAOO,aAHdP,EAASrB,EAAaC,EAAQlD,OAGzBmD,KAAkB,CAAAqB,EAAAE,KAAA,SAGK,OAD9BrC,GAAW,GACXT,EAAO0C,EAAOlB,OAAOG,SAASiB,EAAAQ,OAAA,SACvBnC,EAAmBC,IAAW,QAAA0B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAGzCU,QAAQC,IAAI,wBACZD,QAAQC,IAAGX,EAAAS,IACXC,QAAQC,IAAIC,KAAKC,UAAUb,EAAAS,GAAIK,UAE/B9C,EAAQgC,EAAAS,IACRpC,EAAmBC,GAAY,yBAAA0B,EAAAxB,OAAA,GAAAqB,EAAA,mBAItC,kBAxCkB,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KAuDnB,OAbAvE,IAAMwE,WAAU,WACPrD,EAOD4B,KANAxB,GAAS,GAEgB,OAArBG,GACAE,EAAmBF,GAM/B,GAAG,CAACP,IAGAnB,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAACvE,EAAgByE,OAAAC,OAAA,GACThE,EAAU,CACdiE,QAAS,kBAAMzD,GAAYD,EAAQ,IAEnCnB,IAAAyE,cAACK,IAAoB,OAEzB9E,IAAAyE,cAACtE,EAAW,CACR4E,MAAM,eACN5D,QAASA,EACT6D,SAAU,kBAAM5D,GAAW,EAAM,EACjC6D,OAAQ,MAEP9D,EACGnB,IAAAyE,cAAA,WACK7E,EACGI,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAACS,IAAK,CACFb,QAAQ,QACRc,YAAY,kLACZjD,KAAK,QACLkD,UAAQ,EACRC,MAAO,CAAEC,UAAW,WAQ5BtF,IAAAyE,cAACpE,EAAS,CAACkF,GAAG,8BAGtB,MAIpB,E,sNCtKQC,EAAaC,IAAbD,SAYKE,EAAcC,YAAGpH,MAAAC,YAAA,kpEAEF,SAAAC,GAAK,OACrBA,EAAMC,MAAMiB,MAAMiG,eAAe,IACjB,SAAAnH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMkG,MAAM,IAC5C,SAAApH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMmG,eAAe,IAI/B,SAAArH,GAAK,OACrBA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAIhC,SAAAtH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMZ,IAAI,IAMpB,SAAAN,GAAK,OACrBA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAIhC,SAAAtH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMZ,IAAI,IAMpB,SAAAN,GAAK,OAAIA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAC9C,SAAAtH,GAAK,OAAIA,EAAMC,MAAMI,OAAOkH,QAAQC,KAAK,IAIzC,SAAAxH,GAAK,OAAIA,EAAMC,MAAMI,OAAOkH,QAAQC,KAAK,IASzC,SAAAxH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAClD,SAAAtH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAO5B,SAAAnB,GAAK,OAAIA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAClD,SAAAtH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAM5B,SAAAnB,GAAK,OAAIA,EAAMC,MAAMiB,MAAMoG,mBAAmB,IAClD,SAAAtH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAMvC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMiB,MAAMZ,IAAI,IAI/B,SAAAN,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IACzB,SAAAnB,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAGvC,SAAAnB,GAAK,OAAIA,EAAMC,MAAMiB,MAAMC,KAAK,IAIpCsG,EAAkB7H,IAAOC,IAAGO,MAAAL,YAAA,kBACnCkH,GAGOS,EAAiB9H,IAAOiB,KAAIL,MAAAT,YAAA,+EAKnC,SAAAC,GAAK,OACHA,EAAM2H,SAAQ,yDAIU,IAGnBC,EAAuBhI,IAAOiB,KAAIF,MAAAZ,YAAA,+MACvB,SAAAC,GAAK,OAAIA,EAAMC,MAAMiB,MAAMiG,eAAe,IAC1C,SAAAnH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMkG,MAAM,IAC5C,SAAApH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMmG,eAAe,IAKtC,SAAArH,GAAK,OAAIA,EAAMC,MAAMiB,MAAMmG,eAAe,IAErD,SAAArH,GAAK,OACHA,EAAM2H,SAAQ,yDAIU,IAGnBE,EAAe,SAAH9F,GAMlB,IALH+F,EAAK/F,EAAL+F,MACAC,EAAUhG,EAAVgG,WACAC,EAAWjG,EAAXiG,YACAC,EAAclG,EAAdkG,eACG9F,EAAUC,YAAAL,EAAAM,GAEL6F,EAAWC,IAAXD,OAWFE,EAVa,CACf,CACIC,MAAOtE,IAASC,OAChBsE,MAAOvE,IAASC,QAEpB,CACIqE,MAAOJ,GAAkC,MACzCK,MAAOL,GAAkC,QAGdM,KAAI,SAAAxE,GACnC,OACIxC,gBAAC2G,EAAM,CACHM,IAAKzE,EAASsE,MACdA,MAAOtE,EAASsE,MAChBI,UAAU,0BAET1E,EAASuE,MAGtB,IAEMI,EACFnH,gBAAC4G,IAAMjC,OAAAC,OAAA,CACHwC,aAAc5E,IAASC,OACvByE,UAAU,eACV7B,MAAO,CAAEgC,MAAO,QACZZ,GAEHI,GAGT,OACI7G,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAM+B,MAAK,CAACC,SAAO,GAChBzH,gBAACyF,IAAKd,OAAAC,OAAA,CACFS,MAAO,CAAEgC,MAAO,MAAO/B,UAAW,QAClCpD,KAAK,SACLwF,KAC0B,IAAtBlB,EAAWmB,OACL,IACA,EAACC,KAAAC,IAAG,GAAMrF,IAASsF,cAE7BC,OAC0B,IAAtBvB,EAAWmB,OACP3H,gBAACgI,IAAoB,MAErBhI,gBAAA,OACIiI,IAAKzF,IAAS0F,KACdC,IAAI,GACJd,MAAO,GACPe,OAAQ,MAIhB5B,IAEPW,EACDnH,gBAACqG,EAAoB,CACjBhB,MAAO,CACHgC,MAAO,MACPe,OAAQ,OACRC,WAAY,QAEhBjC,YAAaI,GAAc,CAAC,GAAGJ,SAC/BvB,UAAW2B,GAAc,CAAC,GAAGJ,UAAYG,GAC5C,SAOrB,EA+Fa+B,EAAuB,SAAHC,GAA8C,IAAxChC,EAAKgC,EAALhC,MAAOC,EAAU+B,EAAV/B,WAAe5F,EAAUC,YAAA0H,EAAAC,GACnE,OACIxI,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAKd,OAAAC,OAAA,CACF1C,KAAK,SACL6F,OACI/H,gBAAA,OACIiI,IAAKzF,IAAS0F,KACdC,IAAI,GACJd,MAAO,GACPe,OAAQ,KAGhBK,WACIzI,gBAACmG,EAAc,CACXC,YAAaI,GAAc,CAAC,GAAGJ,SAC/BvB,UAAW2B,GAAc,CAAC,GAAGJ,UAAYG,GAC5C,QAIDC,KAKxB,EAQakC,EAA2B,SAAHC,GAK9B,IAJHhI,EAAMgI,EAANhI,OACAF,EAAkBkI,EAAlBlI,mBACA+F,EAAUmC,EAAVnC,WACG5F,EAAUC,YAAA8H,EAAAC,GAEb,OACI5I,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAKd,OAAAC,OAAA,CACFmD,OAAQ/H,gBAAC6I,IAAoB,MAC7BC,aAAa,MACbL,WACIzI,gBAACO,EAAU,CACPE,mBAAoBA,EACpBE,OAAQA,KAGZ6F,KAKxB,EAQauC,EAA0B,SAAHC,GAAuC,IAAjCxC,EAAUwC,EAAVxC,WAAe5F,EAAUC,YAAAmI,EAAAC,GAC/D,OACIjJ,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACwF,EAAQb,OAAAC,OAAA,CACLmD,OAAQ/H,gBAAC6I,IAAoB,MAC7BC,aAAa,OACTtC,KAKxB,EAMa0C,EAAqB,SAAHC,GAGxB,IAFH3C,EAAU2C,EAAV3C,WACG5F,EAAUC,YAAAsI,EAAAC,GAEb,OACIpJ,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAKd,OAAAC,OAAA,CACFmD,OAAQ/H,gBAAC6I,IAAoB,MAC7BC,aAAa,MACbO,UAAU,GACN7C,KAKxB,EAQa8C,EAAmB,SAAHC,GAGtB,IAFH/C,EAAU+C,EAAV/C,WACG5F,EAAUC,YAAA0I,EAAAC,GAEb,OACIxJ,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAKd,OAAAC,OAAA,CACFmD,OAAQ/H,gBAACyJ,IAAkB,MAC3BX,aAAa,OACTtC,KAKxB,EAMakD,EAAyB,SAAHC,GAG5B,IAFHnD,EAAUmD,EAAVnD,WACG5F,EAAUC,YAAA8I,EAAAC,GAEPC,EAAUC,IAAY,GAAGC,SAC/B,OACI/J,gBAACkG,EAAe,KACZlG,gBAACsH,IAAKC,KAAS3G,EACXZ,gBAACyF,IAAKd,OAAAC,OAAA,CACFS,MAAO,CAAEgC,MAAO,MAAO/B,UAAW,QAClCpD,KAAK,SACLwF,KAAM,IACNsC,UAAW,EACXjC,OACI/H,gBAAA,OACIiI,IAAK4B,EACL1B,IAAI,GACJd,MAAO,GACPe,OAAQ,MAGZ5B,KAKxB,EAMayD,EAAyB,SAAAxD,GAMlC,IALA,IAAQE,EAAWC,IAAXD,OAGFuD,EAAsB,GACtBC,EAAexF,OAAOyF,KAAK5H,IAAS6H,gBACjCC,EAAI,EAAGA,EAAIH,EAAavH,OAAQ0H,GAAK,EAAG,CAC7C,IAAMC,EAAqB,CAAC,EAC5BA,EAAmBzD,MACftE,IAAS6H,eAAeF,EAAaG,IAAIE,KAC7CD,EAAmBxD,MAAK,GAAA0D,OACpBjI,IAAS6H,eAAeF,EAAaG,IAAII,KAAI,MAAAD,OAC5CjI,IAAS6H,eAAeF,EAAaG,IAAIK,OAAM,KACpDT,EAAoBU,KAAKL,EAC7B,CACA,IAAM1D,EAAkBqD,EAAoBlD,KAAI,SAAAuD,GAC5C,OACIvK,gBAAC2G,EAAM,CACHM,IAAKsD,EAAmBzD,MACxBA,MAAOyD,EAAmBzD,MAC1BI,UAAU,0BAETqD,EAAmBxD,MAGhC,IAEA,OACI/G,gBAAC4G,IAAMjC,OAAAC,OAAA,CACHsC,UAAU,eACV7B,MAAO,CACHgC,MAAO,SAEPZ,GAEHI,EAGb,C,mCCzfA,4BAuBegE,IAlBO,SAAHrK,GAA6B,IAAvBsK,EAAOtK,EAAPsK,QAASrI,EAAMjC,EAANiC,OAC9B,OACIzC,gBAACpB,IAAiB,KACbkM,EAAQ,IAAErI,EAGvB,C,mCCXA,aACe,MAAG,C,mCCDlB,aACe,MAAG,C,sRCsCZsI,EAAe1M,IAAOC,IAAGC,MAAAC,YAAA,oGAGP,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOkH,QAAQC,KAAK,IAI3D+E,EAAW,SAAHxK,GAA+B,IAADyK,EAAxBC,EAAiB1K,EAAjB0K,kBAMVC,EAAenL,IAAMoL,WAAWC,KAC9BvM,EAAoBqM,EAApBrM,OAAQwM,EAAYH,EAAZG,SACVC,EAAcC,YAAe1M,GAE/B2M,EAEAF,EAFAE,OACAC,EACAH,EADAG,SAGEC,EAAgB,CAClBC,OAAO,EACP9E,MAAO,GACPxE,QAAS,IAGbvB,EAAgCC,mBAAS2K,GAAc1K,EAAAC,YAAAH,EAAA,GAAhD8K,EAAQ5K,EAAA,GAAE6K,EAAW7K,EAAA,GAE5B,GAAI4K,EAASE,MAAO,CAChB,IAAMA,EAAQN,EAAOO,MAAK,SAAAD,GAAK,OAC3BA,EAAME,UAAYJ,EAASE,MAAME,OAAO,IAE5C,GAAIF,EAAO,CACP,IAAMG,EAAeH,EAAMjB,QAAQqB,WACXC,MAAIC,WAAWH,GAClCI,KAAI1E,KAAAC,IAAC,GAAMkE,EAAMQ,KAAKC,WACtBL,UACT,KAC4B,GAEhC,CACA,IAAA9K,EAAsCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAA7CoL,EAAWnL,EAAA,GAAEoL,EAAcpL,EAAA,GAClCE,EAAsCR,mBAAS,MAAKS,EAAAP,YAAAM,EAAA,GAA7CmL,EAAWlL,EAAA,GAAEmL,EAAcnL,EAAA,GAGlCoL,EAA4D7L,oBAAS,GAAM8L,EAAA5L,YAAA2L,EAAA,GAApEE,EAAsBD,EAAA,GAAEE,EAAyBF,EAAA,GACxDG,GAAsDjM,mBAAS,GAAEkM,GAAAhM,YAAA+L,GAAA,GAA1DE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAqB5CG,GAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAG,GACzD,EAEMI,GAAUC,cAEhBC,GAQKC,cAPDC,GAAeF,GAAfE,gBACAC,GAAYH,GAAZG,aACAC,GAAcJ,GAAdI,eACAC,GAAYL,GAAZK,aACAC,GAAUN,GAAVM,WACAC,GAAiBP,GAAjBO,kBACAC,GAAYR,GAAZQ,aAwDc,SAEHC,GAAeC,GAAA,OAAAC,GAAAjK,MAAA,KAAAC,UAAA,UAAAgK,KAoE7B,OApE6BA,GAAAtL,YAAAC,cAAAC,MAA9B,SAAAqL,EAAgCC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA5C,EAAA6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjM,cAAAI,MAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,OASkB,OATlB2L,EAAA5L,KAAA,EAAAkL,EAQ5BT,GAAaQ,GALbE,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAASH,EAATG,UACA5C,EAAOyC,EAAPzC,QACA6C,EAAOJ,EAAPI,QAEEC,EAAkBH,GAAiBC,EAASO,EAAA3L,KAAA,EAC1B2K,GACpBW,EAAgBM,OAChBN,EAAgBO,OAClB,KAAD,EAHc,GAATN,EAASI,EAAAxL,KAIA,CAADwL,EAAA3L,KAAA,QAEoB,OAA9B8L,GAAoBd,GAAUW,EAAArL,OAAA,SACvByL,GACH,IAAIC,MAAM,+DACV,SACH,UAKW,IAAZX,EAAa,CAAAM,EAAA3L,KAAA,gBAAA2L,EAAA3L,KAAA,GACU0K,GACnB,CAACa,EAAU1M,SACX,IACA,GACF,KAAD,GAJK4M,EAAQE,EAAAxL,KAKdqL,EAAYC,EAASlD,MAAK,SAAA0D,GAAE,OACxB5F,IAAYkC,MAAK,SAAA2D,GAAO,IAAAC,EAAA,OACpBD,EAAQ1D,UAAsB,QAAf2D,EAAIF,EAAGG,gBAAQ,IAAAD,OAAA,EAAXA,EAAa3D,QAAO,GAC1C,IACHmD,EAAA3L,KAAA,wBAAA2L,EAAA3L,KAAA,GAEgByK,GAAWjC,EAAQE,SAAS,QAAO,QAArD8C,EAASG,EAAAxL,KAAA,WAERqL,EAAU,CAADG,EAAA3L,KAAA,SAEoB,OAA9B8L,GAAoBd,GAAUW,EAAArL,OAAA,SACvByL,GACH,IAAIC,MAAM,2EACV,SACH,QAGCN,EAAgB/C,MACjB0D,OAAOnB,GACPoB,QAAOnI,KAAAC,IAAI,GAAMoH,EAAUY,SAASrD,UAEzCI,EAAcoD,wBAAC,CAAC,EACTf,EAAUY,UAAQ,IACrBlB,aAAcQ,KAElBzC,EAAe+B,GAEfc,GAAoBd,GAAUW,EAAA3L,KAAA,iBAID,OAJC2L,EAAA5L,KAAA,GAAA4L,EAAApL,GAAAoL,EAAA,SAE9BnL,QAAQC,IAAGkL,EAAApL,IAEZuL,GAAoBd,GAAUW,EAAArL,OAAA,SACvByL,GACH,IAAIC,MAAM,gEACV,SACH,yBAAAL,EAAArN,OAAA,GAAAyM,EAAA,oBAEPlK,MAAA,KAAAC,UAAA,CAED,SAASiL,GAAmBS,EAAUxN,GAGlC,IAAI4B,EADJ6G,GAAkB,GAUd7G,EAPC4L,EAASrQ,OAAUqQ,EAAS5L,QAG7B,iEAAiE6L,KAC7DD,EAASrQ,OAGH,oDAEVqQ,EAASrQ,OACTqQ,EAASrQ,MAAMuQ,SACX,gFAGG,OAAA1F,OAAUjI,IAASC,OAAM,sKACzBwN,GAA6B,eAAjBA,EAAS/N,KAClB,0GAGN+N,EAAS5L,SAAW4L,EAASrQ,OAASuE,KAAKC,UAAU6L,GAlBlD,wCAAAxF,OAA2CqD,KAAiB,KAqBvEsC,YAAkBH,EAAU5L,EAAQ,WAADoG,OAAahI,GAEpD,CAEA,SAAS8M,GAAoBd,GAEzB4B,OAAOC,UAAUC,WAAa,SAASC,EAAYC,GAE/C,IAAIC,EAAMF,EAAWG,QAAQ,yBAA0B,QACnDC,EAAM,IAAIC,OAAOH,EAAK,MAC1B,OAAOI,KAAKH,QAAQC,EAAKH,EAC7B,EACA,IAAMM,EAAU,YAAAtG,OAAegE,GAC3BuC,EAAcC,OAAOC,SAASC,KAAKZ,WAAWQ,EAAY,IAE9DC,GADAA,EAAcA,EAAYL,QAAQ,OAAQ,QAChBA,QAAQ,MAAO,MAEzCM,OAAOvD,QAAQ0D,aACX,KACA,GACAJ,EAER,CAEmB,SAAAK,KA4DlB,OA5DkBA,GAAApO,YAAAC,cAAAC,MAAnB,SAAAmO,IAAA,IAAArF,EAAAsF,EAAA,OAAArO,cAAAI,MAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAMI,GALAqI,EAAWkE,wBAAC,CAAC,EACNnE,GAAQ,IACXD,OAAO,KAINa,EAAY,CAAD+E,EAAA/N,KAAA,eAAA+N,EAAAzN,OAAA,iBAoBZ,GAfEkI,EAAUwF,EAAOC,KACnB/E,EAAYV,QACZ,OAKJnJ,YAAM,cAAe,WAAY2J,GAEjCvB,GAAkB,GAAMsG,EAAAhO,KAAA,EAAA+N,EAKhBtD,GAAaxB,GAED,IAHL8E,EAAPzC,QAGa,CAAA0C,EAAA/N,KAAA,gBAAA+N,EAAA/N,KAAA,GACPsK,GACFjP,EACAmN,EACAQ,GACA,GACF,KAAD,GAAA+E,EAAA/N,KAAA,wBAAA+N,EAAA/N,KAAA,GAEKuK,GACFlP,EACA2N,GACA,GACF,KAAD,GAIL,OADAkF,cACAH,EAAA/N,KAAA,GACM4J,GAAM,KAAM,KAAD,GAIgB,OAFjCnC,GAAkB,GAElBqE,GAAoB9C,GAAa+E,EAAAzN,OAAA,SAE1B2J,GAAQ9C,KAAK,YAAU,QAAA4G,EAAAhO,KAAA,GAAAgO,EAAAxN,GAAAwN,EAAA,SAE9BhC,GAAkBgC,EAAAxN,GAAIyI,GAAa,QAIvCX,EAAYH,GAEZT,GAAkB,GAAO,yBAAAsG,EAAAzP,OAAA,GAAAuP,EAAA,oBAC5BhN,MAAA,KAAAC,UAAA,CA1ODC,qBAAU,WACN0G,GAAkB,EACtB,GAAG,CAACQ,EAASkG,eAEbpN,oBAASvB,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAyO,EAAAC,EAAAC,EAAAtD,EAAAnE,EAAA0H,EAAAC,EAAAC,EAAApL,EAAA,OAAA5D,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACD3E,EAAOqT,SAAS,CAAD5O,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SACT2J,GAAQ9C,KAAK,YAAU,OAGlC,GAFAM,GAAkB,IAIduB,GACCwE,OAAOC,UACPD,OAAOC,SAASkB,OACU,IAA1BnB,OAAOC,SAASmB,QAAyC,eAAzBpB,OAAOC,SAASkB,MAAsB,CAAA7O,EAAAE,KAAA,QAE9C,OAAzByH,GAAkB,GAAO3H,EAAAQ,OAAA,iBAc7B,IAVM8N,EAA4C,IAA1BZ,OAAOC,SAASmB,OACpCpB,OAAOC,SAASkB,KAAOnB,OAAOC,SAASmB,OAErCP,EAAiBD,EAAgBS,QAAQ,KACzCP,EAAYF,EACbU,MAAMT,EAAe,GACrBpP,MAAM,KAIF4H,EAAI,EAAGA,EAAIyH,EAAUnP,OAAQ0H,GAAK,EACjCwH,EAAiBC,EAAUzH,GAAGgI,QAAQ,KACtCL,EAAQF,EAAUzH,GACnBiI,MAAM,EAAGT,GACTU,cACCN,EAAeH,EAAUzH,GAAGiI,MAAMT,EAAe,GACjDhL,EAAQ2L,mBAAmBP,GACnB,aAAVD,IACAxD,EAAW3H,GAInB,GACK2H,EAAS,CAADlL,EAAAE,KAAA,SACgB,OAAzByH,GAAkB,GAAO3H,EAAAQ,OAAA,yBAAAR,EAAAE,KAAA,GAIvB4K,GAAgBI,GAAU,KAAD,GAE/BvD,GAAkB,GAAO,yBAAA3H,EAAAxB,OAAA,GAAAqB,EAAA,KAC1B,CAACqJ,IAyLJ,IAAMiG,GAAoB,eAAAnK,EAAAtF,YAAAC,cAAAC,MAAG,SAAAwP,EAAMC,GAAC,IAAA9L,EAAA,OAAA5D,cAAAI,MAAA,SAAAuP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,OACxBqD,EAAU8L,EAAEE,OAAZhM,MACR7C,QAAQC,IAAI,QAAS4C,GACrBoE,GAAkB,GAClBmD,GAAgBvH,GAAO,wBAAA+L,EAAA9Q,OAAA,GAAA4Q,EAAA,KAC1B,gBALyBI,GAAA,OAAAxK,EAAAjE,MAAA,KAAAC,UAAA,KAOpByO,GAA0B,eAAArK,EAAA1F,YAAAC,cAAAC,MAAG,SAAA8P,EAAML,GAAC,IAAA9L,EAAA,OAAA5D,cAAAI,MAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,OAC9BqD,EAAU8L,EAAEE,OAAZhM,MACRsG,GAAuB+F,OAAOrM,GAAOsM,QAAQ,IAAI,wBAAAF,EAAAnR,OAAA,GAAAkR,EAAA,KACpD,gBAH+BI,GAAA,OAAA1K,EAAArE,MAAA,KAAAC,UAAA,KAK1B+O,IAA8B,QAAdrI,EAAAY,EAASE,aAAK,IAAAd,OAAA,EAAdA,EAAgBxI,SAAUD,IAASC,OAEzD,OACIzC,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAACrE,IAAK,CACF2E,MAAK,YAAA0F,OAAc6I,IACnBnS,QAAS4L,EACTwG,KApSa,WACrBvG,GAA0B,GAE1B,IAAMwG,EAAcvC,OAAOC,SAASC,KAAKR,QACrCM,OAAOC,SAASkB,KAChB,IAEJ,OAAOnB,OAAOC,SAAStM,OACnB,kCAAA6F,OAAkC0C,GAAoBhB,YAAU,eAAA1B,OAC/C3L,EAAOqT,SAASsB,YAAY,gBAAAhJ,OAC3BiJ,mBAAmBF,IAAc,WAG3D,EAwRYxO,SAtRiB,WACzBgI,GAA0B,EAC9B,GAsRYhN,IAAAyE,cAAA,SAAG,8DAC6D,IAC5DzE,IAAAyE,cAAA,cAAS0I,GAAqB,IAAI,OAAY,MAGpDR,EAOE3M,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAACoG,IAAa,CACVC,QAAS6B,EAAYgC,aAAaxC,WAClC1J,OAAQkK,EAAYlK,UAT5BzC,IAAAyE,cAACtF,IAAiB,KAAC,qCAEfa,IAAAyE,cAAA,WAAM,uDAYdzE,IAAAyE,cAACkP,IAAG,CAACzR,KAAK,QACNlC,IAAAyE,cAACmP,IAAG,CAACtU,KAAM,IACPU,IAAAyE,cAAC6C,IAAI,CACDjC,MAAO,CACHgC,MAAO,UAGRsF,GACC3M,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAAC6E,IAAgB,CACb9C,WAAY,CACRqN,YAAY,qCACZnJ,KAAM,WACNoJ,UAAU,EACVC,SAAU,SAAAnB,GAAC,OAAIF,GAAqBE,EAAE,MAKtD5S,IAAAyE,cAAA,OACIY,MAAO,CACH2O,WAAY,UAIpBhU,IAAAyE,cAAA,OACIY,MAAO,CACH2O,WAAY,SAGdrH,EAGE3M,IAAAyE,cAACwP,IAAa,CACVpP,QAAS,kBA5IxC,WAEkB,OAAAwM,GAAA/M,MAAC,KAADC,UAAA,CA0I4B2P,EAAM,GACxB,eAJDlU,IAAAyE,cAAC0P,IAAe,KAAC,gBASxB7I,GAAYtL,IAAAyE,cAAC1E,IAAQ,WAI/B0M,IAAgBE,IACf3M,IAAAyE,cAAAzE,IAAA0E,SAAA,KACI1E,IAAAyE,cAACsG,EAAY,MACb/K,IAAAyE,cAACtF,IAAiB,KAAC,kDAEnBa,IAAAyE,cAAA,WAAM,4CAGNzE,IAAAyE,cAACkP,IAAG,CAACzR,KAAK,QACNlC,IAAAyE,cAACmP,IAAG,CAACtU,KAAM,IACPU,IAAAyE,cAAC6C,IAAI,CACDjC,MAAO,CACHgC,MAAO,SAGXrH,IAAAyE,cAACiF,IAAsB,CACnBlD,WAAY,CACRqN,YAAY,+BACZnJ,KAAM,WACNoJ,UAAU,EACVnM,OAAQ,EACRoM,SAAU,SAAAnB,GAAC,OAAII,GAA2BJ,EAAE,KAGpD5S,IAAAyE,cAAA,OACIY,MAAO,CACH2O,WAAY,UAIpBhU,IAAAyE,cAAA,OACIY,MAAO,CACH2O,WAAY,SAGd7G,GAGEnN,IAAAyE,cAACwP,IAAa,CACVpP,QAAS,kBAAMmI,GAA0B,EAAK,GACjD,yCAJDhN,IAAAyE,cAAC0P,IAAe,KAAC,0CASxB7I,GAAYtL,IAAAyE,cAAC1E,IAAQ,UAQtD,EASAiL,EAASoJ,aAAe,CACpBlJ,kBAAmB,SAAAmJ,GACfpQ,QAAQC,IAAImQ,EAChB,GAOWrJ,W","file":"static/js/11.597a6c11.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LoadingCtn = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 400px;\r\n    flex-direction: column;\r\n\r\n    svg {\r\n        width: 50px;\r\n        height: 50px;\r\n        fill: ${props => props.theme.primary};\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 23px;\r\n    }\r\n`;\r\n\r\nexport const BalanceHeaderFiatWrap = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const ZeroBalanceHeader = styled.div`\r\n    color: ${props => props.theme.wallet.text.primary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const TokenParamLabel = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const AlertMsg = styled.p`\r\n    color: ${props => props.theme.forms.error} !important;\r\n`;\r\n\r\nexport const ConvertAmount = styled.div`\r\n    color: ${props => props.theme.wallet.text.secondary};\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport { CashLoader } from '@components/Common/CustomIcons';\r\nimport { AlertMsg } from '@components/Common/Atoms';\r\n\r\nconst ApiError = () => {\r\n    return (\r\n        <>\r\n            <AlertMsg>\r\n                <b>API connection lost.</b>\r\n                <br /> Re-establishing connection...\r\n            </AlertMsg>\r\n            <CashLoader />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApiError;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Modal } from 'antd';\r\nimport { ThemedQrcodeOutlined } from '@components/Common/CustomIcons';\r\nimport styled from 'styled-components';\r\nimport { BrowserQRCodeReader } from '@zxing/library';\r\nimport {\r\n    currency,\r\n    isValidCashPrefix,\r\n    isValidTokenPrefix,\r\n} from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\n\r\nconst StyledScanQRCode = styled.span`\r\n    display: block;\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n    width: 400px !important;\r\n    height: 400px !important;\r\n\r\n    .ant-modal-close {\r\n        top: 0 !important;\r\n        right: 0 !important;\r\n    }\r\n`;\r\n\r\nconst QRPreview = styled.video`\r\n    width: 100%;\r\n`;\r\n\r\nconst ScanQRCode = ({\r\n    loadWithCameraOpen,\r\n    onScan = () => null,\r\n    ...otherProps\r\n}) => {\r\n    const [visible, setVisible] = useState(loadWithCameraOpen);\r\n    const [error, setError] = useState(false);\r\n    // Use these states to debug video errors on mobile\r\n    // Note: iOS chrome/brave/firefox does not support accessing camera, will throw error\r\n    // iOS users can use safari\r\n    // todo only show scanner with safari\r\n    //const [mobileError, setMobileError] = useState(false);\r\n    //const [mobileErrorMsg, setMobileErrorMsg] = useState(false);\r\n    const [activeCodeReader, setActiveCodeReader] = useState(null);\r\n\r\n    const teardownCodeReader = codeReader => {\r\n        if (codeReader !== null) {\r\n            codeReader.reset();\r\n            codeReader.stop();\r\n            codeReader = null;\r\n            setActiveCodeReader(codeReader);\r\n        }\r\n    };\r\n\r\n    const parseContent = content => {\r\n        let type = 'unknown';\r\n        let values = {};\r\n\r\n        // If what scanner reads from QR code begins with 'bitcoincash:' or 'simpleledger:' or their successor prefixes\r\n        if (isValidCashPrefix(content) || isValidTokenPrefix(content)) {\r\n            type = 'address';\r\n            values = { address: content };\r\n            // Event(\"Category\", \"Action\", \"Label\")\r\n            // Track number of successful QR code scans\r\n            // BCH or slp?\r\n            let eventLabel = currency.ticker;\r\n            const isToken = content.split(currency.tokenPrefix).length > 1;\r\n            if (isToken) {\r\n                eventLabel = currency.tokenTicker;\r\n            }\r\n            Event('ScanQRCode.js', 'Address Scanned', eventLabel);\r\n        }\r\n        return { type, values };\r\n    };\r\n\r\n    const scanForQrCode = async () => {\r\n        const codeReader = new BrowserQRCodeReader();\r\n        setActiveCodeReader(codeReader);\r\n\r\n        try {\r\n            // Need to execute this before you can decode input\r\n            // eslint-disable-next-line no-unused-vars\r\n            const videoInputDevices = await codeReader.getVideoInputDevices();\r\n            //console.log(`videoInputDevices`, videoInputDevices);\r\n            //setMobileError(JSON.stringify(videoInputDevices));\r\n\r\n            // choose your media device (webcam, frontal camera, back camera, etc.)\r\n            // TODO implement if necessary\r\n            //const selectedDeviceId = videoInputDevices[0].deviceId;\r\n\r\n            //const previewElem = document.querySelector(\"#test-area-qr-code-webcam\");\r\n\r\n            const content = await codeReader.decodeFromInputVideoDevice(\r\n                undefined,\r\n                'test-area-qr-code-webcam',\r\n            );\r\n            const result = parseContent(content.text);\r\n\r\n            // stop scanning and fill form if it's an address\r\n            if (result.type === 'address') {\r\n                // Hide the scanner\r\n                setVisible(false);\r\n                onScan(result.values.address);\r\n                return teardownCodeReader(codeReader);\r\n            }\r\n        } catch (err) {\r\n            console.log(`Error in QR scanner:`);\r\n            console.log(err);\r\n            console.log(JSON.stringify(err.message));\r\n            //setMobileErrorMsg(JSON.stringify(err.message));\r\n            setError(err);\r\n            teardownCodeReader(codeReader);\r\n        }\r\n\r\n        // stop scanning after 20s no matter what\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!visible) {\r\n            setError(false);\r\n            // Stop the camera if user closes modal\r\n            if (activeCodeReader !== null) {\r\n                teardownCodeReader(activeCodeReader);\r\n            }\r\n        } else {\r\n            scanForQrCode();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [visible]);\r\n\r\n    return (\r\n        <>\r\n            <StyledScanQRCode\r\n                {...otherProps}\r\n                onClick={() => setVisible(!visible)}\r\n            >\r\n                <ThemedQrcodeOutlined />\r\n            </StyledScanQRCode>\r\n            <StyledModal\r\n                title=\"Scan QR code\"\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                footer={null}\r\n            >\r\n                {visible ? (\r\n                    <div>\r\n                        {error ? (\r\n                            <>\r\n                                <Alert\r\n                                    message=\"Error\"\r\n                                    description=\"Error in QR scanner. Please ensure your camera is not in use. Due to Apple restrictions on third-party browsers, you must use Safari browser for QR code scanning on an iPhone.\"\r\n                                    type=\"error\"\r\n                                    showIcon\r\n                                    style={{ textAlign: 'left' }}\r\n                                />\r\n                                {/*\r\n                <p>{mobileError}</p>\r\n                <p>{mobileErrorMsg}</p>\r\n                */}\r\n                            </>\r\n                        ) : (\r\n                            <QRPreview id=\"test-area-qr-code-webcam\"></QRPreview>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n            </StyledModal>\r\n        </>\r\n    );\r\n};\r\n\r\nScanQRCode.propTypes = {\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    onScan: PropTypes.func,\r\n};\r\n\r\nexport default ScanQRCode;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select } from 'antd';\r\nconst { TextArea } = Input;\r\nimport {\r\n    ThemedDollarOutlined,\r\n    ThemedWalletOutlined,\r\n    ThemedLockOutlined\r\n} from '@components/Common/CustomIcons';\r\nimport styled, { css } from 'styled-components';\r\nimport ScanQRCode from './ScanQRCode';\r\nimport useBCH from '@hooks/useBCH';\r\nimport { currency } from '@components/Common/Ticker.js';\r\nimport { authPubKeys } from '@utils/selfMint';\r\n\r\nexport const AntdFormCss = css`\r\n    .ant-input-group-addon {\r\n        background-color: ${props =>\r\n            props.theme.forms.addonBackground} !important;\r\n        border: 1px solid ${props => props.theme.forms.border};\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    input.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n    }\r\n    textarea.ant-input,\r\n    .ant-select-selection {\r\n        background-color: ${props =>\r\n            props.theme.forms.selectionBackground} !important;\r\n        box-shadow: none !important;\r\n        border-radius: 4px;\r\n        font-weight: bold;\r\n        color: ${props => props.theme.forms.text};\r\n        opacity: 1;\r\n        height: 50px;\r\n        min-height: 100px;\r\n    }\r\n    .ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-select-selector {\r\n        height: 60px !important;\r\n        border: 1px solid ${props => props.theme.wallet.borders.color} !important;\r\n    }\r\n    .ant-form-item-has-error\r\n        > div\r\n        > div.ant-form-item-control-input\r\n        > div\r\n        > span\r\n        > span\r\n        > span.ant-input-affix-wrapper {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error .ant-input,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper,\r\n    .ant-form-item-has-error .ant-input:hover,\r\n    .ant-form-item-has-error .ant-input-affix-wrapper:hover {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n\r\n    .ant-form-item-has-error\r\n        .ant-select:not(.ant-select-disabled):not(.ant-select-customize-input)\r\n        .ant-select-selector {\r\n        background-color: ${props => props.theme.forms.selectionBackground};\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-select-single .ant-select-selector .ant-select-selection-item,\r\n    .ant-select-single .ant-select-selector .ant-select-selection-placeholder {\r\n        line-height: 60px;\r\n        text-align: left;\r\n        color: ${props => props.theme.forms.text};\r\n        font-weight: bold;\r\n    }\r\n    .ant-form-item-has-error .ant-input-group-addon {\r\n        color: ${props => props.theme.forms.error} !important;\r\n        border-color: ${props => props.theme.forms.error} !important;\r\n    }\r\n    .ant-form-item-explain.ant-form-item-explain-error {\r\n        color: ${props => props.theme.forms.error} !important;\r\n    }\r\n`;\r\n\r\nexport const AntdFormWrapper = styled.div`\r\n    ${AntdFormCss}\r\n`;\r\n\r\nexport const InputAddonText = styled.span`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const InputNumberAddonText = styled.span`\r\n    background-color: ${props => props.theme.forms.addonBackground} !important;\r\n    border: 1px solid ${props => props.theme.forms.border};\r\n    color: ${props => props.theme.forms.addonForeground} !important;\r\n    height: 50px;\r\n    line-height: 47px;\r\n\r\n    * {\r\n        color: ${props => props.theme.forms.addonForeground} !important;\r\n    }\r\n    ${props =>\r\n        props.disabled\r\n            ? `\r\n      cursor: not-allowed;\r\n      `\r\n            : `cursor: pointer;`}\r\n`;\r\n\r\nexport const SendBchInput = ({\r\n    onMax,\r\n    inputProps,\r\n    selectProps,\r\n    activeFiatCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: currency.ticker,\r\n            label: currency.ticker,\r\n        },\r\n        {\r\n            value: activeFiatCode ? activeFiatCode : 'USD',\r\n            label: activeFiatCode ? activeFiatCode : 'USD',\r\n        },\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            defaultValue={currency.ticker}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : (\r\n                                <img\r\n                                    src={currency.logo}\r\n                                    alt=\"\"\r\n                                    width={16}\r\n                                    height={16}\r\n                                />\r\n                            )\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                    <InputNumberAddonText\r\n                        style={{\r\n                            width: '10%',\r\n                            height: '60px',\r\n                            lineHeight: '60px',\r\n                        }}\r\n                        disabled={!!(inputProps || {}).disabled}\r\n                        onClick={!(inputProps || {}).disabled && onMax}\r\n                    >\r\n                        max\r\n                    </InputNumberAddonText>\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBchInput.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeFiatCode: PropTypes.string,\r\n};\r\n\r\nexport const SendBip70Input = ({\r\n    inputProps,\r\n    selectProps,\r\n    activeTokenCode,\r\n    ...otherProps\r\n}) => {\r\n    const { Option } = Select;\r\n    const currencies = [\r\n        {\r\n            value: activeTokenCode,\r\n            label: activeTokenCode,\r\n        }\r\n    ];\r\n    const currencyOptions = currencies.map(currency => {\r\n        return (\r\n            <Option\r\n                key={currency.value}\r\n                value={currency.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currency.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    const CurrencySelect = (\r\n        <Select\r\n            value={activeTokenCode}\r\n            readOnly={true}\r\n            className=\"select-after\"\r\n            style={{ width: '30%' }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n\r\n    const prefixImage = inputProps.token ? (\r\n        <div\r\n            style={{\r\n                height: '16px',\r\n                width: '16px'\r\n            }}\r\n        ></div>\r\n    ) : (\r\n        <img\r\n            src={currency.logo}\r\n            alt=\"\"\r\n            width={16}\r\n            height={16}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input.Group compact>\r\n                    <Input\r\n                        readOnly={true}\r\n                        style={{ width: '60%', textAlign: 'left' }}\r\n                        type=\"number\"\r\n                        step={\r\n                            inputProps.dollar === 1\r\n                                ? 0.01\r\n                                : 1 / 10 ** currency.cashDecimals\r\n                        }\r\n                        prefix={\r\n                            inputProps.dollar === 1 ? (\r\n                                <ThemedDollarOutlined />\r\n                            ) : prefixImage\r\n                        }\r\n                        {...inputProps}\r\n                    />\r\n                    {CurrencySelect}\r\n                </Input.Group>\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSendBip70Input.propTypes = {\r\n    inputProps: PropTypes.object,\r\n    selectProps: PropTypes.object,\r\n    activeTokenCode: PropTypes.string,\r\n};\r\n\r\nexport const FormItemWithMaxAddon = ({ onMax, inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    type=\"number\"\r\n                    prefix={\r\n                        <img\r\n                            src={currency.logo}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    addonAfter={\r\n                        <InputAddonText\r\n                            disabled={!!(inputProps || {}).disabled}\r\n                            onClick={!(inputProps || {}).disabled && onMax}\r\n                        >\r\n                            max\r\n                        </InputAddonText>\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nFormItemWithMaxAddon.propTypes = {\r\n    onMax: PropTypes.func,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\n// loadWithCameraOpen prop: if true, load page with camera scanning open\r\nexport const DestinationAddressSingle = ({\r\n    onScan,\r\n    loadWithCameraOpen,\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    addonAfter={\r\n                        <ScanQRCode\r\n                            loadWithCameraOpen={loadWithCameraOpen}\r\n                            onScan={onScan}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const DestinationAddressMulti = ({ inputProps, ...otherProps }) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <TextArea\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nDestinationAddressMulti.propTypes = {\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const Bip70AddressSingle = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedWalletOutlined />}\r\n                    autoComplete=\"off\"\r\n                    readOnly={true}\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nBip70AddressSingle.propTypes = {\r\n    onScan: PropTypes.func,\r\n    loadWithCameraOpen: PropTypes.bool,\r\n    inputProps: PropTypes.object,\r\n};\r\n\r\nexport const SelfMintAuthCode = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    prefix={<ThemedLockOutlined />}\r\n                    autoComplete=\"off\"\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintAuthCode.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const SelfMintPurchaseAmount = ({\r\n    inputProps,\r\n    ...otherProps\r\n}) => {\r\n    const logoUrl = authPubKeys[0].imageUrl;\r\n    return (\r\n        <AntdFormWrapper>\r\n            <Form.Item {...otherProps}>\r\n                <Input\r\n                    style={{ width: '60%', textAlign: 'left' }}\r\n                    type=\"number\"\r\n                    step={0.01}\r\n                    precision={2}\r\n                    prefix={\r\n                        <img\r\n                            src={logoUrl}\r\n                            alt=\"\"\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    }\r\n                    {...inputProps}\r\n                />\r\n            </Form.Item>\r\n        </AntdFormWrapper>\r\n    );\r\n};\r\n\r\nSelfMintPurchaseAmount.propTypes = {\r\n    inputProps: PropTypes.object\r\n};\r\n\r\nexport const CurrencySelectDropdown = selectProps => {\r\n    const { Option } = Select;\r\n\r\n    // Build select dropdown from currency.fiatCurrencies\r\n    const currencyMenuOptions = [];\r\n    const currencyKeys = Object.keys(currency.fiatCurrencies);\r\n    for (let i = 0; i < currencyKeys.length; i += 1) {\r\n        const currencyMenuOption = {};\r\n        currencyMenuOption.value =\r\n            currency.fiatCurrencies[currencyKeys[i]].slug;\r\n        currencyMenuOption.label = `${\r\n            currency.fiatCurrencies[currencyKeys[i]].name\r\n        } (${currency.fiatCurrencies[currencyKeys[i]].symbol})`;\r\n        currencyMenuOptions.push(currencyMenuOption);\r\n    }\r\n    const currencyOptions = currencyMenuOptions.map(currencyMenuOption => {\r\n        return (\r\n            <Option\r\n                key={currencyMenuOption.value}\r\n                value={currencyMenuOption.value}\r\n                className=\"selectedCurrencyOption\"\r\n            >\r\n                {currencyMenuOption.label}\r\n            </Option>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            className=\"select-after\"\r\n            style={{\r\n                width: '100%',\r\n            }}\r\n            {...selectProps}\r\n        >\r\n            {currencyOptions}\r\n        </Select>\r\n    );\r\n};\r\n\r\n// export const AddressValidators = () => {\r\n//     const { BCH } = useBCH();\r\n\r\n//     return {\r\n//         safelyDetectAddressFormat: value => {\r\n//             try {\r\n//                 return BCH.Address.detectAddressFormat(value);\r\n//             } catch (error) {\r\n//                 return null;\r\n//             }\r\n//         },\r\n//         isSLPAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'slpaddr',\r\n//         isBCHAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'cashaddr',\r\n//         isLegacyAddress: value =>\r\n//             AddressValidators.safelyDetectAddressFormat(value) === 'legacy',\r\n//     }();\r\n// };\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatBalance } from '@utils/cashMethods';\r\nimport { BalanceHeaderWrap } from '@components/Common/Atoms';\r\n\r\nconst BalanceHeader = ({ balance, ticker }) => {\r\n    return (\r\n        <BalanceHeaderWrap>\r\n            {balance} {ticker}\r\n        </BalanceHeaderWrap>\r\n    );\r\n};\r\n\r\n// balance may be a number (XEC balance) or a BigNumber object (token balance)\r\nBalanceHeader.propTypes = {\r\n    balance: PropTypes.oneOfType([\r\n        PropTypes.number, \r\n        PropTypes.object, \r\n        PropTypes.string\r\n    ]),\r\n    ticker: PropTypes.string,\r\n};\r\n\r\nexport default BalanceHeader;\r\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    useHistory\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { WalletContext } from '@utils/context';\r\nimport {\r\n    SelfMintAuthCode\r\n} from '@components/Common/EnhancedInputs';\r\nimport {\r\n    Form,\r\n    Modal,\r\n} from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport PrimaryButton, {\r\n    SecondaryButton,\r\n} from '@components/Common/PrimaryButton';\r\nimport useBCH from '@hooks/useBCH';\r\nimport {\r\n    selfMintTokenNotification,\r\n    errorNotification,\r\n} from '@components/Common/Notifications';\r\nimport {\r\n    currency\r\n} from '@components/Common/Ticker.js';\r\nimport { Event } from '@utils/GoogleAnalytics';\r\nimport BalanceHeader from '@components/Common/BalanceHeader';\r\nimport {\r\n    ZeroBalanceHeader\r\n} from '@components/Common/Atoms';\r\nimport { \r\n    getWalletState\r\n} from '@utils/cashMethods';\r\nimport ApiError from '@components/Common/ApiError';\r\nimport styled from 'styled-components';\r\nimport { authPubKeys } from '@utils/selfMint';\r\nimport { U64 } from 'n64';\r\nimport { SelfMintPurchaseAmount } from '../Common/EnhancedInputs';\r\n\r\nconst StyledSpacer = styled.div`\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: ${props => props.theme.wallet.borders.color};\r\n    margin: 60px 0 50px;\r\n`;\r\n\r\nconst SelfMint = ({ passLoadingStatus }) => {\r\n    // use balance parameters from wallet.state object and not legacy balances parameter from walletState, if user has migrated wallet\r\n    // this handles edge case of user with old wallet who has not opened latest Cashtab version yet\r\n\r\n    // If the wallet object from ContextValue has a `state key`, then check which keys are in the wallet object\r\n    // Else set it as blank\r\n    const ContextValue = React.useContext(WalletContext);\r\n    const { wallet, apiError} = ContextValue;\r\n    const walletState = getWalletState(wallet);\r\n    const { \r\n        tokens,\r\n        balances\r\n    } = walletState;\r\n    \r\n    const blankFormData = {\r\n        dirty: true,\r\n        value: '',\r\n        address: '',\r\n    };\r\n\r\n    const [formData, setFormData] = useState(blankFormData);\r\n    let tokenFormattedBalance;\r\n    if (formData.token) {\r\n        const token = tokens.find(token => \r\n            token.tokenId === formData.token.tokenId\r\n        );\r\n        if (token) {\r\n            const tokenBalance = token.balance.toString();\r\n            tokenFormattedBalance = U64.fromString(tokenBalance)\r\n                .divn(10 ** token.info.decimals)\r\n                .toString();\r\n        } else {\r\n            tokenFormattedBalance = '0';\r\n        }\r\n    }\r\n    const [authCodeB64, setAuthCodeB64] = useState(null);\r\n    const [tokenToMint, setTokenToMint] = useState(null);\r\n\r\n    // Show a purchase modal when BUX is requested and insufficient balance\r\n    const [isPurchaseModalVisible, setIsPurchaseModalVisible] = useState(false);\r\n    const [purchaseTokenAmount, setPurchaseTokenAmount] = useState(0);\r\n\r\n    const handlePurchaseOk = () => {\r\n        setIsPurchaseModalVisible(false);\r\n        // Remove anchor hash from url\r\n        const callbackUrl = window.location.href.replace(\r\n            window.location.hash,\r\n            ''\r\n        );\r\n        return window.location.assign(\r\n            `https://bux.digital/?cbxamount=${purchaseTokenAmount.toString()}`\r\n            + `&cbxaddress=${wallet.Path1899.slpAddress}`\r\n            + `&cbxcallback=${encodeURIComponent(callbackUrl)}`\r\n            +`#payment`\r\n        )\r\n    };\r\n\r\n    const handlePurchaseCancel = () => {\r\n        setIsPurchaseModalVisible(false);\r\n    };\r\n\r\n    const sleep = (ms) => {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const { \r\n        getBcashRestUrl, \r\n        sendSelfMint, \r\n        sendSelfMintV2, \r\n        readAuthCode,\r\n        getTxBcash,\r\n        getTxHistoryBcash,\r\n        getUtxoBcash\r\n     } = useBCH();\r\n\r\n    // If the balance has changed, unlock the UI\r\n    // This is redundant, if backend has refreshed in 1.75s timeout below, UI will already be unlocked\r\n    useEffect(() => {\r\n        passLoadingStatus(false);\r\n    }, [balances.totalBalance]);\r\n\r\n    useEffect(async () => {\r\n        if (!wallet.Path1899)\r\n            return history.push('/wallet');\r\n        passLoadingStatus(true);\r\n\r\n        // Do not set authCode in state if query strings are not present or code is already set\r\n        if (\r\n            authCodeB64 ||\r\n            !window.location ||\r\n            !window.location.hash ||\r\n            (window.location.search == '' && window.location.hash === '#/selfMint')\r\n        ) {\r\n            passLoadingStatus(false);\r\n            return;\r\n        }\r\n\r\n        const fullQueryString = window.location.search == '' ? \r\n            window.location.hash : window.location.search;\r\n\r\n        const delimiterIndex = fullQueryString.indexOf('?');\r\n        const txInfoArr = fullQueryString\r\n            .slice(delimiterIndex+1)\r\n            .split('&');\r\n\r\n        // Iterate over this to create object\r\n        let authCode;\r\n        for (let i = 0; i < txInfoArr.length; i += 1) {\r\n            const delimiterIndex = txInfoArr[i].indexOf('=');\r\n            const param = txInfoArr[i]\r\n                .slice(0, delimiterIndex)\r\n                .toLowerCase();\r\n            const encodedValue = txInfoArr[i].slice(delimiterIndex+1);\r\n            const value = decodeURIComponent(encodedValue);\r\n            if (param === 'mintauth') {\r\n                authCode = value;\r\n            }\r\n        }\r\n        // console.log('authCode', authCode);\r\n        // If no authcode specified\r\n        if (!authCode) {\r\n            passLoadingStatus(false);\r\n            return;\r\n        }\r\n        // Process auth code\r\n        await processAuthCode(authCode);\r\n\r\n        passLoadingStatus(false);\r\n    }, [authCodeB64]);\r\n\r\n    async function processAuthCode (authCode) {\r\n        try {\r\n            const { \r\n                mintQuantity, \r\n                stampOutpoint,\r\n                batonUtxo,\r\n                tokenId,\r\n                version\r\n            } = readAuthCode(authCode);\r\n            const outpointTocheck = stampOutpoint || batonUtxo;\r\n            const stampUtxo = await getUtxoBcash(\r\n                outpointTocheck.txid(),\r\n                outpointTocheck.index\r\n            );\r\n            if (!stampUtxo) {\r\n                // remove the mintauth parameter from the url\r\n                removeMintAuthParam(authCode);\r\n                return handleSendXecError(\r\n                    new Error(`Invalid authorization code: UTXO in authcode does not exist`),\r\n                    'MINT'\r\n                );\r\n            }\r\n\r\n            let genesisTx;\r\n\r\n            if (version === 1) {\r\n                const stampTxs = await getTxHistoryBcash(\r\n                    [stampUtxo.address],\r\n                    10,\r\n                    false\r\n                );\r\n                genesisTx = stampTxs.find(tx => \r\n                    authPubKeys.find(authObj => \r\n                        authObj.tokenId == tx.slpToken?.tokenId\r\n                    )\r\n                );\r\n            } else {\r\n                genesisTx = await getTxBcash(tokenId.toString('hex'))\r\n            }\r\n            if (!genesisTx) {\r\n                // remove the mintauth parameter from the url\r\n                removeMintAuthParam(authCode);\r\n                return handleSendXecError(\r\n                    new Error(`Invalid authorization code: Authcode is for unsupported self-mint token`),\r\n                    'MINT'\r\n                );\r\n            }\r\n\r\n            const mintQtyString = U64\r\n                .fromBE(mintQuantity)\r\n                .toInt() / (10 ** genesisTx.slpToken.decimals);\r\n\r\n            setTokenToMint({\r\n                ...genesisTx.slpToken,\r\n                mintQuantity: mintQtyString\r\n            })\r\n            setAuthCodeB64(authCode);\r\n            // remove mintauth url parameter if present\r\n            removeMintAuthParam(authCode);\r\n        } catch (err) {\r\n            console.log(err)\r\n           // remove the mintauth parameter from the url\r\n           removeMintAuthParam(authCode);\r\n           return handleSendXecError(\r\n               new Error(`Invalid authorization code: Copy and paste a valid auth code`),\r\n               'MINT'\r\n           ); \r\n        }\r\n    }\r\n\r\n    function handleSendXecError(errorObj, ticker) {\r\n        // Set loading to false here as well, as balance may not change depending on where error occured in try loop\r\n        passLoadingStatus(false);\r\n        let message;\r\n\r\n        if (!errorObj.error && !errorObj.message) {\r\n            message = `Transaction failed: no response from ${getBcashRestUrl()}.`;\r\n        } else if (\r\n            /Could not communicate with full node or other external service/.test(\r\n                errorObj.error,\r\n            )\r\n        ) {\r\n            message = 'Could not communicate with API. Please try again.';\r\n        } else if (\r\n            errorObj.error &&\r\n            errorObj.error.includes(\r\n                'too-long-mempool-chain, too many unconfirmed ancestors [limit: 50] (code 64)',\r\n            )\r\n        ) {\r\n            message = `The ${currency.ticker} you are trying to send has too many unconfirmed ancestors to send (limit 50). Sending will be possible after a block confirmation. Try again in about 10 minutes.`;\r\n        } else if (errorObj && errorObj.type == 'VerifyError') {\r\n            message = \"Mint transaction rejected. The provided authcode is not valid for the address controlled by this wallet\"\r\n        } else {\r\n            message =\r\n                errorObj.message || errorObj.error || JSON.stringify(errorObj);\r\n        }\r\n\r\n        errorNotification(errorObj, message, `Sending ${ticker}`);\r\n\r\n    }\r\n\r\n    function removeMintAuthParam(authCode) {\r\n        // String replaceAll case-insensitive\r\n        String.prototype.replaceAll = function(strReplace, strWith) {\r\n            // See http://stackoverflow.com/a/3561711/556609\r\n            var esc = strReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n            var reg = new RegExp(esc, 'ig');\r\n            return this.replace(reg, strWith);\r\n        };\r\n        const searchMask = `mintauth=${authCode}`;\r\n        let locationStr = window.location.href.replaceAll(searchMask, '');\r\n        locationStr = locationStr.replace('/?#/', '/#/');\r\n        locationStr = locationStr.replace('/?&', '/?');\r\n        // Remove mintauth parameter and value from url\r\n        window.history.replaceState(\r\n            null, \r\n            '', \r\n            locationStr\r\n        );\r\n    } \r\n\r\n    async function send() {\r\n        setFormData({\r\n            ...formData,\r\n            dirty: false,\r\n        });\r\n\r\n        // ensure prInfo exists\r\n        if (!authCodeB64) {\r\n            return;\r\n        }\r\n\r\n        // TODO: Handle many different tokens\r\n        const tokenId = Buffer.from(\r\n            tokenToMint.tokenId,\r\n            'hex'\r\n        );\r\n\r\n        // Event(\"Category\", \"Action\", \"Label\")\r\n        // Track number of XEC BIP70 transactions\r\n        Event('SelfMint.js', 'SelfMint', authCodeB64);\r\n\r\n        passLoadingStatus(true);\r\n\r\n        try {\r\n            const { \r\n                version\r\n            } = readAuthCode(authCodeB64);\r\n            // Send transaction\r\n            if (version === 1) {\r\n                await sendSelfMint(\r\n                    wallet,\r\n                    tokenId,\r\n                    authCodeB64,\r\n                    false // testOnly\r\n                );\r\n            } else {\r\n                await sendSelfMintV2(\r\n                    wallet,\r\n                    authCodeB64,\r\n                    false // testOnly\r\n                );\r\n            }\r\n\r\n            selfMintTokenNotification();\r\n            // Sleep for 10 seconds and then \r\n            await sleep(8000);\r\n            // Manually disable loading\r\n            passLoadingStatus(false);\r\n            // Remove mintauth url param\r\n            removeMintAuthParam(authCodeB64);\r\n\r\n            return history.push(`/wallet`);\r\n        } catch (e) {\r\n            handleSendXecError(e, authCodeB64);\r\n        }\r\n        \r\n        // Clear the address field\r\n        setFormData(blankFormData);\r\n        // Manually disable loading\r\n        passLoadingStatus(false);\r\n    }\r\n\r\n    const handleAuthCodeChange = async e => {\r\n        const { value } = e.target;\r\n        console.log('value', value);\r\n        passLoadingStatus(true);\r\n        processAuthCode(value);\r\n    };\r\n\r\n    const handlePurchaseAmountChange = async e => {\r\n        const { value } = e.target;\r\n        setPurchaseTokenAmount(Number(value).toFixed(2));\r\n    }\r\n\r\n    const displayTicker = formData.token?.ticker || currency.ticker;\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={`Purchase ${displayTicker}`}\r\n                visible={isPurchaseModalVisible}\r\n                onOk={handlePurchaseOk}\r\n                onCancel={handlePurchaseCancel}\r\n            >\r\n                <p>\r\n                    Do you want to purchase a Self Mint authorization code for {' '}\r\n                    <strong>{purchaseTokenAmount}{' '}BUX</strong>?\r\n                </p>\r\n            </Modal>\r\n            {!tokenToMint ? (\r\n                <ZeroBalanceHeader>\r\n                    Would you like to mint new tokens?\r\n                    <br />\r\n                    Please provide a valid Self Mint Authorization Code\r\n                </ZeroBalanceHeader>\r\n            ) : (\r\n                <>\r\n                    <BalanceHeader\r\n                        balance={tokenToMint.mintQuantity.toString()}\r\n                        ticker={tokenToMint.ticker}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            <Row type=\"flex\">\r\n                <Col span={24}>\r\n                    <Form\r\n                        style={{\r\n                            width: 'auto',\r\n                        }}\r\n                    >\r\n                        {(!tokenToMint) && (\r\n                            <>\r\n                                <SelfMintAuthCode\r\n                                    inputProps={{\r\n                                        placeholder: `Enter Self Mint Authorization Code`,\r\n                                        name: 'authcode',\r\n                                        required: true,\r\n                                        onChange: e => handleAuthCodeChange(e),\r\n                                    }}\r\n                                ></SelfMintAuthCode>\r\n                            </>\r\n                        )}\r\n                        <div\r\n                            style={{\r\n                                paddingTop: '32px',\r\n                            }}\r\n                        >\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                paddingTop: '12px',\r\n                            }}\r\n                        >\r\n                            {!tokenToMint ? (\r\n                                <SecondaryButton>Mint Tokens</SecondaryButton>\r\n                            ) : (\r\n                                <PrimaryButton\r\n                                    onClick={() => send()}\r\n                                >\r\n                                    Mint Tokens\r\n                                </PrimaryButton>\r\n                            )}\r\n                        </div>\r\n                        {apiError && <ApiError />}\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {(!authCodeB64 || !tokenToMint) && (\r\n                <>\r\n                    <StyledSpacer />\r\n                    <ZeroBalanceHeader>\r\n                    Don't have an authorization code? Purchase one.\r\n                    <br />\r\n                    How many BUX tokens do you want to mint?\r\n                    </ZeroBalanceHeader>\r\n                    <Row type=\"flex\">\r\n                        <Col span={24}>\r\n                            <Form\r\n                                style={{\r\n                                    width: 'auto',\r\n                                }}\r\n                            >\r\n                                <SelfMintPurchaseAmount\r\n                                    inputProps={{\r\n                                        placeholder: `Amount Of BUX Tokens To Mint`,\r\n                                        name: 'authcode',\r\n                                        required: true,\r\n                                        dollar: 1,\r\n                                        onChange: e => handlePurchaseAmountChange(e),\r\n                                    }}\r\n                                ></SelfMintPurchaseAmount>\r\n                                <div\r\n                                    style={{\r\n                                        paddingTop: '32px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        paddingTop: '12px',\r\n                                    }}\r\n                                >\r\n                                    {!purchaseTokenAmount ? (\r\n                                        <SecondaryButton>Purchase Self Mint Authorization Code</SecondaryButton>\r\n                                    ) : (\r\n                                        <PrimaryButton\r\n                                            onClick={() => setIsPurchaseModalVisible(true)}\r\n                                        >\r\n                                            Purchase Self Mint Authorization Code\r\n                                        </PrimaryButton>\r\n                                    )}\r\n                                </div>\r\n                                {apiError && <ApiError />}\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n/*\r\npassLoadingStatus must receive a default prop that is a function\r\nin order to pass the rendering unit test in SelfMint.test.js\r\n\r\nstatus => {console.log(status)} is an arbitrary stub function\r\n*/\r\n\r\nSelfMint.defaultProps = {\r\n    passLoadingStatus: status => {\r\n        console.log(status);\r\n    },\r\n};\r\n\r\nSelfMint.propTypes = {\r\n    passLoadingStatus: PropTypes.func,\r\n};\r\n\r\nexport default SelfMint;\r\n"],"sourceRoot":""}